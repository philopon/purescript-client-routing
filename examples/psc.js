// Generated by psc version 0.6.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Num = function ($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_40) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_48) {
        if (_48 instanceof LT) {
            return "LT";
        };
        if (_48 instanceof GT) {
            return "GT";
        };
        if (_48 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_41) {
        if (_41) {
            return "true";
        };
        if (!_41) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_55) {
        return function (_56) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_44) {
        return function (_45) {
            return false;
        };
    }, function (_42) {
        return function (_43) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_49) {
        return function (_50) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_51) {
        return function (_52) {
            if (!_51 && !_52) {
                return EQ.value;
            };
            if (!_51 && _52) {
                return LT.value;
            };
            if (_51 && _52) {
                return EQ.value;
            };
            if (_51 && !_52) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_36) {
        return function (_37) {
            return _36;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _383 = compare(__dict_Ord_11)(a1)(a2);
                if (_383 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _384 = compare(__dict_Ord_12)(a1)(a2);
                if (_384 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _385 = compare(__dict_Ord_13)(a1)(a2);
                if (_385 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _386 = compare(__dict_Ord_14)(a1)(a2);
                if (_386 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_53) {
            return function (_54) {
                if (_53.length === 0 && _54.length === 0) {
                    return EQ.value;
                };
                if (_53.length === 0) {
                    return LT.value;
                };
                if (_54.length === 0) {
                    return GT.value;
                };
                if (_53.length >= 1) {
                    var _393 = _53.slice(1);
                    if (_54.length >= 1) {
                        var _391 = _54.slice(1);
                        var _389 = compare(__dict_Ord_10)(_53[0])(_54[0]);
                        if (_389 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_393)(_391);
                        };
                        return _389;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_46) {
        return function (_47) {
            if (_46 instanceof LT && _47 instanceof LT) {
                return true;
            };
            if (_46 instanceof GT && _47 instanceof GT) {
                return true;
            };
            if (_46 instanceof EQ && _47 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_38) {
        return function (_39) {
            return _38;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        ".&.": $dot$amp$dot, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        otherwise: otherwise, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Network_Routing_Client_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
var director = (function(exports){


//
// Generated on Sat Dec 06 2014 16:08:09 GMT-0500 (EST) by Charlie Robbins, Paolo Fragomeni & the Contributors (Using Codesurgeon).
// Version 1.2.4
//

(function (exports) {

/*
 * browser.js: Browser specific functionality for director.
 *
 * (C) 2011, Charlie Robbins, Paolo Fragomeni, & the Contributors.
 * MIT LICENSE
 *
 */

var dloc = document.location;

function dlocHashEmpty() {
  // Non-IE browsers return '' when the address bar shows '#'; Director's logic
  // assumes both mean empty.
  return dloc.hash === '' || dloc.hash === '#';
}

var listener = {
  mode: 'modern',
  hash: dloc.hash,
  history: false,

  check: function () {
    var h = dloc.hash;
    if (h != this.hash) {
      this.hash = h;
      this.onHashChanged();
    }
  },

  fire: function () {
    if (this.mode === 'modern') {
      this.history === true ? window.onpopstate() : window.onhashchange();
    }
    else {
      this.onHashChanged();
    }
  },

  init: function (fn, history) {
    var self = this;
    this.history = history;

    if (!Router.listeners) {
      Router.listeners = [];
    }

    function onchange(onChangeEvent) {
      for (var i = 0, l = Router.listeners.length; i < l; i++) {
        Router.listeners[i](onChangeEvent);
      }
    }

    //note IE8 is being counted as 'modern' because it has the hashchange event
    if ('onhashchange' in window && (document.documentMode === undefined
      || document.documentMode > 7)) {
      // At least for now HTML5 history is available for 'modern' browsers only
      if (this.history === true) {
        // There is an old bug in Chrome that causes onpopstate to fire even
        // upon initial page load. Since the handler is run manually in init(),
        // this would cause Chrome to run it twise. Currently the only
        // workaround seems to be to set the handler after the initial page load
        // http://code.google.com/p/chromium/issues/detail?id=63040
        setTimeout(function() {
          window.onpopstate = onchange;
        }, 500);
      }
      else {
        window.onhashchange = onchange;
      }
      this.mode = 'modern';
    }
    else {
      //
      // IE support, based on a concept by Erik Arvidson ...
      //
      var frame = document.createElement('iframe');
      frame.id = 'state-frame';
      frame.style.display = 'none';
      document.body.appendChild(frame);
      this.writeFrame('');

      if ('onpropertychange' in document && 'attachEvent' in document) {
        document.attachEvent('onpropertychange', function () {
          if (event.propertyName === 'location') {
            self.check();
          }
        });
      }

      window.setInterval(function () { self.check(); }, 50);

      this.onHashChanged = onchange;
      this.mode = 'legacy';
    }

    Router.listeners.push(fn);

    return this.mode;
  },

  destroy: function (fn) {
    if (!Router || !Router.listeners) {
      return;
    }

    var listeners = Router.listeners;

    for (var i = listeners.length - 1; i >= 0; i--) {
      if (listeners[i] === fn) {
        listeners.splice(i, 1);
      }
    }
  },

  setHash: function (s) {
    // Mozilla always adds an entry to the history
    if (this.mode === 'legacy') {
      this.writeFrame(s);
    }

    if (this.history === true) {
      window.history.pushState({}, document.title, s);
      // Fire an onpopstate event manually since pushing does not obviously
      // trigger the pop event.
      this.fire();
    } else {
      dloc.hash = (s[0] === '/') ? s : '/' + s;
    }
    return this;
  },

  writeFrame: function (s) {
    // IE support...
    var f = document.getElementById('state-frame');
    var d = f.contentDocument || f.contentWindow.document;
    d.open();
    d.write("<script>_hash = '" + s + "'; onload = parent.listener.syncHash;<script>");
    d.close();
  },

  syncHash: function () {
    // IE support...
    var s = this._hash;
    if (s != dloc.hash) {
      dloc.hash = s;
    }
    return this;
  },

  onHashChanged: function () {}
};

var Router = exports.Router = function (routes) {
  if (!(this instanceof Router)) return new Router(routes);

  this.params   = {};
  this.routes   = {};
  this.methods  = ['on', 'once', 'after', 'before'];
  this.scope    = [];
  this._methods = {};

  this._insert = this.insert;
  this.insert = this.insertEx;

  this.historySupport = (window.history != null ? window.history.pushState : null) != null

  this.configure();
  this.mount(routes || {});
};

Router.prototype.init = function (r) {
  var self = this
    , routeTo;
  this.handler = function(onChangeEvent) {
    var newURL = onChangeEvent && onChangeEvent.newURL || window.location.hash;
    var url = self.history === true ? self.getPath() : newURL.replace(/.*#/, '');
    self.dispatch('on', url.charAt(0) === '/' ? url : '/' + url);
  };

  listener.init(this.handler, this.history);

  if (this.history === false) {
    if (dlocHashEmpty() && r) {
      dloc.hash = r;
    } else if (!dlocHashEmpty()) {
      self.dispatch('on', '/' + dloc.hash.replace(/^(#\/|#|\/)/, ''));
    }
  }
  else {
    if (this.convert_hash_in_init) {
      // Use hash as route
      routeTo = dlocHashEmpty() && r ? r : !dlocHashEmpty() ? dloc.hash.replace(/^#/, '') : null;
      if (routeTo) {
        window.history.replaceState({}, document.title, routeTo);
      }
    }
    else {
      // Use canonical url
      routeTo = this.getPath();
    }

    // Router has been initialized, but due to the chrome bug it will not
    // yet actually route HTML5 history state changes. Thus, decide if should route.
    if (routeTo || this.run_in_init === true) {
      this.handler();
    }
  }

  return this;
};

Router.prototype.explode = function () {
  var v = this.history === true ? this.getPath() : dloc.hash;
  if (v.charAt(1) === '/') { v=v.slice(1) }
  return v.slice(1, v.length).split("/");
};

Router.prototype.setRoute = function (i, v, val) {
  var url = this.explode();

  if (typeof i === 'number' && typeof v === 'string') {
    url[i] = v;
  }
  else if (typeof val === 'string') {
    url.splice(i, v, s);
  }
  else {
    url = [i];
  }

  listener.setHash(url.join('/'));
  return url;
};

//
// ### function insertEx(method, path, route, parent)
// #### @method {string} Method to insert the specific `route`.
// #### @path {Array} Parsed path to insert the `route` at.
// #### @route {Array|function} Route handlers to insert.
// #### @parent {Object} **Optional** Parent "routes" to insert into.
// insert a callback that will only occur once per the matched route.
//
Router.prototype.insertEx = function(method, path, route, parent) {
  if (method === "once") {
    method = "on";
    route = function(route) {
      var once = false;
      return function() {
        if (once) return;
        once = true;
        return route.apply(this, arguments);
      };
    }(route);
  }
  return this._insert(method, path, route, parent);
};

Router.prototype.getRoute = function (v) {
  var ret = v;

  if (typeof v === "number") {
    ret = this.explode()[v];
  }
  else if (typeof v === "string"){
    var h = this.explode();
    ret = h.indexOf(v);
  }
  else {
    ret = this.explode();
  }

  return ret;
};

Router.prototype.destroy = function () {
  listener.destroy(this.handler);
  return this;
};

Router.prototype.getPath = function () {
  var path = window.location.pathname;
  if (path.substr(0, 1) !== '/') {
    path = '/' + path;
  }
  return path;
};
function _every(arr, iterator) {
  for (var i = 0; i < arr.length; i += 1) {
    if (iterator(arr[i], i, arr) === false) {
      return;
    }
  }
}

function _flatten(arr) {
  var flat = [];
  for (var i = 0, n = arr.length; i < n; i++) {
    flat = flat.concat(arr[i]);
  }
  return flat;
}

function _asyncEverySeries(arr, iterator, callback) {
  if (!arr.length) {
    return callback();
  }
  var completed = 0;
  (function iterate() {
    iterator(arr[completed], function(err) {
      if (err || err === false) {
        callback(err);
        callback = function() {};
      } else {
        completed += 1;
        if (completed === arr.length) {
          callback();
        } else {
          iterate();
        }
      }
    });
  })();
}

function paramifyString(str, params, mod) {
  mod = str;
  for (var param in params) {
    if (params.hasOwnProperty(param)) {
      mod = params[param](str);
      if (mod !== str) {
        break;
      }
    }
  }
  return mod === str ? "([._a-zA-Z0-9-]+)" : mod;
}

function regifyString(str, params) {
  var matches, last = 0, out = "";
  while (matches = str.substr(last).match(/[^\w\d\- %@&]*\*[^\w\d\- %@&]*/)) {
    last = matches.index + matches[0].length;
    matches[0] = matches[0].replace(/^\*/, "([_.()!\\ %@&a-zA-Z0-9-]+)");
    out += str.substr(0, matches.index) + matches[0];
  }
  str = out += str.substr(last);
  var captures = str.match(/:([^\/]+)/ig), capture, length;
  if (captures) {
    length = captures.length;
    for (var i = 0; i < length; i++) {
      capture = captures[i];
      if (capture.slice(0, 2) === "::") {
        str = capture.slice(1);
      } else {
        str = str.replace(capture, paramifyString(capture, params));
      }
    }
  }
  return str;
}

function terminator(routes, delimiter, start, stop) {
  var last = 0, left = 0, right = 0, start = (start || "(").toString(), stop = (stop || ")").toString(), i;
  for (i = 0; i < routes.length; i++) {
    var chunk = routes[i];
    if (chunk.indexOf(start, last) > chunk.indexOf(stop, last) || ~chunk.indexOf(start, last) && !~chunk.indexOf(stop, last) || !~chunk.indexOf(start, last) && ~chunk.indexOf(stop, last)) {
      left = chunk.indexOf(start, last);
      right = chunk.indexOf(stop, last);
      if (~left && !~right || !~left && ~right) {
        var tmp = routes.slice(0, (i || 1) + 1).join(delimiter);
        routes = [ tmp ].concat(routes.slice((i || 1) + 1));
      }
      last = (right > left ? right : left) + 1;
      i = 0;
    } else {
      last = 0;
    }
  }
  return routes;
}

var QUERY_SEPARATOR = /\?.*/;

Router.prototype.configure = function(options) {
  options = options || {};
  for (var i = 0; i < this.methods.length; i++) {
    this._methods[this.methods[i]] = true;
  }
  this.recurse = options.recurse || this.recurse || false;
  this.async = options.async || false;
  this.delimiter = options.delimiter || "/";
  this.strict = typeof options.strict === "undefined" ? true : options.strict;
  this.notfound = options.notfound;
  this.resource = options.resource;
  this.history = options.html5history && this.historySupport || false;
  this.run_in_init = this.history === true && options.run_handler_in_init !== false;
  this.convert_hash_in_init = this.history === true && options.convert_hash_in_init !== false;
  this.every = {
    after: options.after || null,
    before: options.before || null,
    on: options.on || null
  };
  return this;
};

Router.prototype.param = function(token, matcher) {
  if (token[0] !== ":") {
    token = ":" + token;
  }
  var compiled = new RegExp(token, "g");
  this.params[token] = function(str) {
    return str.replace(compiled, matcher.source || matcher);
  };
  return this;
};

Router.prototype.on = Router.prototype.route = function(method, path, route) {
  var self = this;
  if (!route && typeof path == "function") {
    route = path;
    path = method;
    method = "on";
  }
  if (Array.isArray(path)) {
    return path.forEach(function(p) {
      self.on(method, p, route);
    });
  }
  if (path.source) {
    path = path.source.replace(/\\\//ig, "/");
  }
  if (Array.isArray(method)) {
    return method.forEach(function(m) {
      self.on(m.toLowerCase(), path, route);
    });
  }
  path = path.split(new RegExp(this.delimiter));
  path = terminator(path, this.delimiter);
  this.insert(method, this.scope.concat(path), route);
};

Router.prototype.path = function(path, routesFn) {
  var self = this, length = this.scope.length;
  if (path.source) {
    path = path.source.replace(/\\\//ig, "/");
  }
  path = path.split(new RegExp(this.delimiter));
  path = terminator(path, this.delimiter);
  this.scope = this.scope.concat(path);
  routesFn.call(this, this);
  this.scope.splice(length, path.length);
};

Router.prototype.dispatch = function(method, path, callback) {
  var self = this, fns = this.traverse(method, path.replace(QUERY_SEPARATOR, ""), this.routes, ""), invoked = this._invoked, after;
  this._invoked = true;
  if (!fns || fns.length === 0) {
    this.last = [];
    if (typeof this.notfound === "function") {
      this.invoke([ this.notfound ], {
        method: method,
        path: path
      }, callback);
    }
    return false;
  }
  if (this.recurse === "forward") {
    fns = fns.reverse();
  }
  function updateAndInvoke() {
    self.last = fns.after;
    self.invoke(self.runlist(fns), self, callback);
  }
  after = this.every && this.every.after ? [ this.every.after ].concat(this.last) : [ this.last ];
  if (after && after.length > 0 && invoked) {
    if (this.async) {
      this.invoke(after, this, updateAndInvoke);
    } else {
      this.invoke(after, this);
      updateAndInvoke();
    }
    return true;
  }
  updateAndInvoke();
  return true;
};

Router.prototype.invoke = function(fns, thisArg, callback) {
  var self = this;
  var apply;
  if (this.async) {
    apply = function(fn, next) {
      if (Array.isArray(fn)) {
        return _asyncEverySeries(fn, apply, next);
      } else if (typeof fn == "function") {
        fn.apply(thisArg, (fns.captures || []).concat(next));
      }
    };
    _asyncEverySeries(fns, apply, function() {
      if (callback) {
        callback.apply(thisArg, arguments);
      }
    });
  } else {
    apply = function(fn) {
      if (Array.isArray(fn)) {
        return _every(fn, apply);
      } else if (typeof fn === "function") {
        return fn.apply(thisArg, fns.captures || []);
      } else if (typeof fn === "string" && self.resource) {
        self.resource[fn].apply(thisArg, fns.captures || []);
      }
    };
    _every(fns, apply);
  }
};

Router.prototype.traverse = function(method, path, routes, regexp, filter) {
  var fns = [], current, exact, match, next, that;
  function filterRoutes(routes) {
    if (!filter) {
      return routes;
    }
    function deepCopy(source) {
      var result = [];
      for (var i = 0; i < source.length; i++) {
        result[i] = Array.isArray(source[i]) ? deepCopy(source[i]) : source[i];
      }
      return result;
    }
    function applyFilter(fns) {
      for (var i = fns.length - 1; i >= 0; i--) {
        if (Array.isArray(fns[i])) {
          applyFilter(fns[i]);
          if (fns[i].length === 0) {
            fns.splice(i, 1);
          }
        } else {
          if (!filter(fns[i])) {
            fns.splice(i, 1);
          }
        }
      }
    }
    var newRoutes = deepCopy(routes);
    newRoutes.matched = routes.matched;
    newRoutes.captures = routes.captures;
    newRoutes.after = routes.after.filter(filter);
    applyFilter(newRoutes);
    return newRoutes;
  }
  if (path === this.delimiter && routes[method]) {
    next = [ [ routes.before, routes[method] ].filter(Boolean) ];
    next.after = [ routes.after ].filter(Boolean);
    next.matched = true;
    next.captures = [];
    return filterRoutes(next);
  }
  for (var r in routes) {
    if (routes.hasOwnProperty(r) && (!this._methods[r] || this._methods[r] && typeof routes[r] === "object" && !Array.isArray(routes[r]))) {
      current = exact = regexp + this.delimiter + r;
      if (!this.strict) {
        exact += "[" + this.delimiter + "]?";
      }
      match = path.match(new RegExp("^" + exact));
      if (!match) {
        continue;
      }
      if (match[0] && match[0] == path && routes[r][method]) {
        next = [ [ routes[r].before, routes[r][method] ].filter(Boolean) ];
        next.after = [ routes[r].after ].filter(Boolean);
        next.matched = true;
        next.captures = match.slice(1);
        if (this.recurse && routes === this.routes) {
          next.push([ routes.before, routes.on ].filter(Boolean));
          next.after = next.after.concat([ routes.after ].filter(Boolean));
        }
        return filterRoutes(next);
      }
      next = this.traverse(method, path, routes[r], current);
      if (next.matched) {
        if (next.length > 0) {
          fns = fns.concat(next);
        }
        if (this.recurse) {
          fns.push([ routes[r].before, routes[r].on ].filter(Boolean));
          next.after = next.after.concat([ routes[r].after ].filter(Boolean));
          if (routes === this.routes) {
            fns.push([ routes["before"], routes["on"] ].filter(Boolean));
            next.after = next.after.concat([ routes["after"] ].filter(Boolean));
          }
        }
        fns.matched = true;
        fns.captures = next.captures;
        fns.after = next.after;
        return filterRoutes(fns);
      }
    }
  }
  return false;
};

Router.prototype.insert = function(method, path, route, parent) {
  var methodType, parentType, isArray, nested, part;
  path = path.filter(function(p) {
    return p && p.length > 0;
  });
  parent = parent || this.routes;
  part = path.shift();
  if (/\:|\*/.test(part) && !/\\d|\\w/.test(part)) {
    part = regifyString(part, this.params);
  }
  if (path.length > 0) {
    parent[part] = parent[part] || {};
    return this.insert(method, path, route, parent[part]);
  }
  if (!part && !path.length && parent === this.routes) {
    methodType = typeof parent[method];
    switch (methodType) {
     case "function":
      parent[method] = [ parent[method], route ];
      return;
     case "object":
      parent[method].push(route);
      return;
     case "undefined":
      parent[method] = route;
      return;
    }
    return;
  }
  parentType = typeof parent[part];
  isArray = Array.isArray(parent[part]);
  if (parent[part] && !isArray && parentType == "object") {
    methodType = typeof parent[part][method];
    switch (methodType) {
     case "function":
      parent[part][method] = [ parent[part][method], route ];
      return;
     case "object":
      parent[part][method].push(route);
      return;
     case "undefined":
      parent[part][method] = route;
      return;
    }
  } else if (parentType == "undefined") {
    nested = {};
    nested[method] = route;
    parent[part] = nested;
    return;
  }
  throw new Error("Invalid route context: " + parentType);
};



Router.prototype.extend = function(methods) {
  var self = this, len = methods.length, i;
  function extend(method) {
    self._methods[method] = true;
    self[method] = function() {
      var extra = arguments.length === 1 ? [ method, "" ] : [ method ];
      self.on.apply(self, extra.concat(Array.prototype.slice.call(arguments)));
    };
  }
  for (i = 0; i < len; i++) {
    extend(methods[i]);
  }
};

Router.prototype.runlist = function(fns) {
  var runlist = this.every && this.every.before ? [ this.every.before ].concat(_flatten(fns)) : _flatten(fns);
  if (this.every && this.every.on) {
    runlist.push(this.every.on);
  }
  runlist.captures = fns.captures;
  runlist.source = fns.source;
  return runlist;
};

Router.prototype.mount = function(routes, path) {
  if (!routes || typeof routes !== "object" || Array.isArray(routes)) {
    return;
  }
  var self = this;
  path = path || [];
  if (!Array.isArray(path)) {
    path = path.split(self.delimiter);
  }
  function insertOrMount(route, local) {
    var rename = route, parts = route.split(self.delimiter), routeType = typeof routes[route], isRoute = parts[0] === "" || !self._methods[parts[0]], event = isRoute ? "on" : rename;
    if (isRoute) {
      rename = rename.slice((rename.match(new RegExp("^" + self.delimiter)) || [ "" ])[0].length);
      parts.shift();
    }
    if (isRoute && routeType === "object" && !Array.isArray(routes[route])) {
      local = local.concat(parts);
      self.mount(routes[route], local);
      return;
    }
    if (isRoute) {
      local = local.concat(rename.split(self.delimiter));
      local = terminator(local, self.delimiter);
    }
    self.insert(event, local, routes[route]);
  }
  for (var route in routes) {
    if (routes.hasOwnProperty(route)) {
      insertOrMount(route, path.slice(0));
    }
  }
};



}(typeof exports === "object" ? exports : window));
return exports.Router;
}({}));;
    return {
        director: director
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = function (x) {
        return x;
    };
    var liftRef = function (_57) {
        return function (_58) {
            return function (_59) {
                return _57(_58)(_59);
            };
        };
    };
    var functorRef = new Prelude.Functor(function (_60) {
        return function (_61) {
            return _60(_61);
        };
    });
    var eqRef = new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    return {
        Ref: Ref, 
        liftRef: liftRef, 
        eqRef: eqRef, 
        functorRef: functorRef
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    var Char = function (x) {
        return x;
    };
    var showChar = new Prelude.Show(function (_67) {
        return "Char " + Prelude.show(Prelude.showString)(_67);
    });
    var eqChar = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqChar)(a)(b);
        };
    }, function (_63) {
        return function (_64) {
            return _63 === _64;
        };
    });
    var ordChar = new Prelude.Ord(function () {
        return eqChar;
    }, function (_65) {
        return function (_66) {
            return Prelude.compare(Prelude.ordString)(_65)(_66);
        };
    });
    var charString = function (_62) {
        return _62;
    };
    return {
        toCharCode: toCharCode, 
        fromCharCode: fromCharCode, 
        charString: charString, 
        eqChar: eqChar, 
        ordChar: ordChar, 
        showChar: showChar
    };
})();
var PS = PS || {};
PS.Data_String_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    
    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;
    
    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
    return {
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var MonadTrans = function (lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Error = function (noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = new Error("", Prelude.id(Prelude.categoryArr));
    return {
        Error: Error, 
        strMsg: strMsg, 
        noMsg: noMsg, 
        errorString: errorString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function runST(f) {  return f;};
    var pureST = function (st) {
        return Control_Monad_Eff.runPure(runST(st));
    };
    return {
        pureST: pureST, 
        runST: runST, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_16) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_16)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = function (x) {
        return x;
    };
    var runContT = function (_68) {
        return function (_69) {
            return _68(_69);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_17) {
        return function (m) {
            return function (k) {
                return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(m)(k);
            };
        };
    });
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_19) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_21) {
        return function (__dict_Monad_22) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_22);
            });
        };
    };
    var bindContT = function (__dict_Monad_20) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_20["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_20);
        });
    };
    var applicativeContT = function (__dict_Functor_23) {
        return function (__dict_Monad_24) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_23)(__dict_Monad_24);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_18) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_18["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_18);
        }, function () {
            return bindContT(__dict_Monad_18);
        });
    };
    return {
        ContT: ContT, 
        callCC: callCC, 
        withContT: withContT, 
        mapContT: mapContT, 
        runContT: runContT, 
        functorContT: functorContT, 
        applyContT: applyContT, 
        applicativeContT: applicativeContT, 
        bindContT: bindContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_25) {
        return function (_75) {
            return function (_76) {
                if (_75) {
                    return _76;
                };
                if (!_75) {
                    return Prelude["return"](__dict_Monad_25)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_26) {
        return function (_77) {
            return function (_78) {
                if (!_77) {
                    return _78;
                };
                if (_77) {
                    return Prelude["return"](__dict_Monad_26)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_27) {
        return function (_70) {
            return function (_71) {
                if (_70 === 0) {
                    return Prelude["return"](__dict_Monad_27)([  ]);
                };
                return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(_71)(function (_4) {
                    return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_27)(_70 - 1)(_71))(function (_3) {
                        return Prelude["return"](__dict_Monad_27)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_28) {
        return function (_72) {
            return function (_73) {
                return function (_74) {
                    if (_74.length === 0) {
                        return Prelude["return"](__dict_Monad_28)(_73);
                    };
                    if (_74.length >= 1) {
                        var _425 = _74.slice(1);
                        return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(_72(_73)(_74[0]))(function (a$prime) {
                            return foldM(__dict_Monad_28)(_72)(a$prime)(_425);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Lazy = function (defer) {
        this.defer = defer;
    };
    var Lazy1 = function (defer1) {
        this.defer1 = defer1;
    };
    var Lazy2 = function (defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_29) {
        return function (f) {
            return defer2(__dict_Lazy2_29)(function (_) {
                return f(fix2(__dict_Lazy2_29)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_30) {
        return function (f) {
            return defer1(__dict_Lazy1_30)(function (_) {
                return f(fix1(__dict_Lazy1_30)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_31) {
        return function (f) {
            return defer(__dict_Lazy_31)(function (_) {
                return f(fix(__dict_Lazy_31)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Extend = function ($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_32) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_32)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_33) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_33)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_34) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_34)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_35) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_35)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_36) {
        return function (w) {
            return $less$less$eq(__dict_Extend_36)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Comonad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var ComonadTrans = function (lower) {
        this.lower = lower;
    };
    var lower = function (dict) {
        return dict.lower;
    };
    return {
        ComonadTrans: ComonadTrans, 
        lower: lower
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_37) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_37)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_38) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_38)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_39) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_39)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_40) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_40)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_41) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_41)(cond)(function (cond$prime) {
                        if (cond$prime) {
                            return t;
                        };
                        if (!cond$prime) {
                            return f;
                        };
                        throw new Error("Failed pattern match");
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_42) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_42)(Prelude["<$>"](__dict_Apply_42["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_43) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_43)(Prelude["<$>"](__dict_Apply_43["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_44) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<$>"](__dict_Apply_44["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_45) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_45)(Prelude["<*>"](__dict_Apply_45)(Prelude["<*>"](__dict_Apply_45)(Prelude["<$>"](__dict_Apply_45["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_46) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_46)(Prelude["<*>"](__dict_Apply_46)(Prelude["<$>"](__dict_Apply_46["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_47) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_47)(Prelude["<$>"](__dict_Apply_47["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_48) {
        return function (a) {
            return $times$greater(__dict_Apply_48)(a)(forever(__dict_Apply_48)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_49) {
        return function (__dict_Lazy1_50) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_49["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_49["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_50)(function (_) {
                    return many(__dict_Alternative_49)(__dict_Lazy1_50)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_51) {
        return function (__dict_Lazy1_52) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_51["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_51)(__dict_Lazy1_52)(v))(Prelude.pure(__dict_Alternative_51["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_53) {
        return function (_79) {
            if (_79) {
                return Prelude["return"](__dict_MonadPlus_53["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_79) {
                return Control_Plus.empty((__dict_MonadPlus_53["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = function (x) {
        return x;
    };
    var runReaderT = function (_80) {
        return _80;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_56) {
        return liftReaderT;
    });
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_58) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_58)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_60) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_60["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_60["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_59) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_59["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_5) {
                        return runReaderT(k(_5))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_59["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_61) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_61);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftReaderT)(Prelude.pure(__dict_Applicative_61)));
    };
    var monadReaderT = function (__dict_Monad_54) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_54["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_54);
        });
    };
    var altReaderT = function (__dict_Alt_63) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_63)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_63["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_57) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_57["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_57)));
    };
    var alternativeReaderT = function (__dict_Alternative_62) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_62["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_62["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_55) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_55["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_55["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        withReaderT: withReaderT, 
        runReaderT: runReaderT, 
        functorReaderT: functorReaderT, 
        applyReaderT: applyReaderT, 
        applicativeReaderT: applicativeReaderT, 
        altReaderT: altReaderT, 
        plusReaderT: plusReaderT, 
        alternativeReaderT: alternativeReaderT, 
        bindReaderT: bindReaderT, 
        monadReaderT: monadReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadTransReaderT: monadTransReaderT
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var showEither = function (__dict_Show_64) {
        return function (__dict_Show_65) {
            return new Prelude.Show(function (_90) {
                if (_90 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_64)(_90.value0) + ")");
                };
                if (_90 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_65)(_90.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_84) {
        return function (_85) {
            if (_85 instanceof Left) {
                return new Left(_85.value0);
            };
            if (_85 instanceof Right) {
                return new Right(_84(_85.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_68) {
        return function (__dict_Eq_69) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_68)(__dict_Eq_69))(a)(b);
                };
            }, function (_91) {
                return function (_92) {
                    if (_91 instanceof Left && _92 instanceof Left) {
                        return Prelude["=="](__dict_Eq_68)(_91.value0)(_92.value0);
                    };
                    if (_91 instanceof Right && _92 instanceof Right) {
                        return Prelude["=="](__dict_Eq_69)(_91.value0)(_92.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_66) {
        return function (__dict_Ord_67) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_66["__superclass_Prelude.Eq_0"]())(__dict_Ord_67["__superclass_Prelude.Eq_0"]());
            }, function (_93) {
                return function (_94) {
                    if (_93 instanceof Left && _94 instanceof Left) {
                        return Prelude.compare(__dict_Ord_66)(_93.value0)(_94.value0);
                    };
                    if (_93 instanceof Right && _94 instanceof Right) {
                        return Prelude.compare(__dict_Ord_67)(_93.value0)(_94.value0);
                    };
                    if (_93 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_94 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_81) {
        return function (_82) {
            return function (_83) {
                if (_83 instanceof Left) {
                    return _81(_83.value0);
                };
                if (_83 instanceof Right) {
                    return _82(_83.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_86) {
        return function (_87) {
            if (_86 instanceof Left) {
                return new Left(_86.value0);
            };
            if (_86 instanceof Right) {
                return Prelude["<$>"](functorEither)(_86.value0)(_87);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_88) {
        return function (_89) {
            if (_88 instanceof Left) {
                return _89;
            };
            return _88;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice9: choice9, 
        choice8: choice8, 
        choice7: choice7, 
        choice6: choice6, 
        choice5: choice5, 
        choice4: choice4, 
        choice3: choice3, 
        choice2: choice2
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var showMaybe = function (__dict_Show_70) {
        return new Prelude.Show(function (_110) {
            if (_110 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_70)(_110.value0) + ")");
            };
            if (_110 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_71) {
        return new Prelude.Semigroup(function (_108) {
            return function (_109) {
                if (_108 instanceof Nothing) {
                    return _109;
                };
                if (_109 instanceof Nothing) {
                    return _108;
                };
                if (_108 instanceof Just && _109 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_71)(_108.value0)(_109.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_95) {
        return function (_96) {
            return function (_97) {
                if (_97 instanceof Nothing) {
                    return _95;
                };
                if (_97 instanceof Just) {
                    return _96(_97.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_98) {
        return function (_99) {
            if (_99 instanceof Just) {
                return new Just(_98(_99.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_106) {
        return function (_107) {
            if (_107 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_106(_107));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_73) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_73))(a)(b);
            };
        }, function (_111) {
            return function (_112) {
                if (_111 instanceof Nothing && _112 instanceof Nothing) {
                    return true;
                };
                if (_111 instanceof Just && _112 instanceof Just) {
                    return Prelude["=="](__dict_Eq_73)(_111.value0)(_112.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_72) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_72["__superclass_Prelude.Eq_0"]());
        }, function (_113) {
            return function (_114) {
                if (_113 instanceof Just && _114 instanceof Just) {
                    return Prelude.compare(__dict_Ord_72)(_113.value0)(_114.value0);
                };
                if (_113 instanceof Nothing && _114 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_113 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_114 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_100) {
        return function (_101) {
            if (_100 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_100.value0)(_101);
            };
            if (_100 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_104) {
        return function (_105) {
            if (_104 instanceof Just) {
                return _105(_104.value0);
            };
            if (_104 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_102) {
        return function (_103) {
            if (_102 instanceof Nothing) {
                return _103;
            };
            return _102;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _494 = n < 0 || (n >= length(xs) || isInt(n));
            if (_494) {
                return Data_Maybe.Nothing.value;
            };
            if (!_494) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_117) {
        if (_117.length >= 1) {
            var _497 = _117.slice(1);
            return new Data_Maybe.Just(_497);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__133) {
            return function (__copy__134) {
                return function (__copy__135) {
                    var _133 = __copy__133;
                    var _134 = __copy__134;
                    var _135 = __copy__135;
                    tco: while (true) {
                        if (_135.length >= 1) {
                            var _502 = _135.slice(1);
                            if (_134(_135[0])) {
                                var __tco__133 = Prelude[":"](_135[0])(_133);
                                var __tco__134 = _134;
                                _133 = __tco__133;
                                _134 = __tco__134;
                                _135 = _502;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_133), 
                            rest: _135
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _503 = comp(x)(y);
                    if (_503 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_503 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_503 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_74) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_74))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_119) {
        if (_119.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_126) {
        return function (_127) {
            if (_127.length === 0) {
                return [  ];
            };
            if (_127.length >= 1) {
                var _508 = _127.slice(1);
                return Prelude[":"](_127[0])(nubBy(_126)(filter(function (y) {
                    return !_126(_127[0])(y);
                })(_508)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_75) {
        return nubBy(Prelude["=="](__dict_Eq_75));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__116) {
        var _116 = __copy__116;
        tco: while (true) {
            if (_116.length >= 1) {
                var _511 = _116.slice(1);
                if (_511.length === 0) {
                    return new Data_Maybe.Just(_116[0]);
                };
            };
            if (_116.length >= 1) {
                var _513 = _116.slice(1);
                _116 = _513;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_123) {
        return function (_124) {
            return function (_125) {
                if (_124.length === 0) {
                    return [  ];
                };
                if (_125.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_123(x))(_125) >= 0;
                };
                return filter(el)(_124);
            };
        };
    };
    var intersect = function (__dict_Eq_76) {
        return intersectBy(Prelude["=="](__dict_Eq_76));
    };
    var init = function (_118) {
        if (_118.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_118) - 1)(_118));
    };
    var head = function (_115) {
        if (_115.length >= 1) {
            var _520 = _115.slice(1);
            return new Data_Maybe.Just(_115[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__130) {
            return function (__copy__131) {
                return function (__copy__132) {
                    var _130 = __copy__130;
                    var _131 = __copy__131;
                    var _132 = __copy__132;
                    tco: while (true) {
                        if (_132.length === 0) {
                            return reverse(_130);
                        };
                        if (_132.length >= 1) {
                            var _525 = _132.slice(1);
                            var sp = span(_131(_132[0]))(_525);
                            var __tco__130 = Prelude[":"](Prelude[":"](_132[0])(sp.init))(_130);
                            var __tco__131 = _131;
                            _130 = __tco__130;
                            _131 = __tco__131;
                            _132 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_77) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_77))(xs);
        };
    };
    
    /**
     *  | Performs a sorting first.
     */
    var group$prime = function (__dict_Ord_78) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_78["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_78));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_79) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_79)(x));
        };
    };
    var elemIndex = function (__dict_Eq_80) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_80)(x));
        };
    };
    var deleteBy = function (_120) {
        return function (_121) {
            return function (_122) {
                if (_122.length === 0) {
                    return [  ];
                };
                var _529 = findIndex(_120(_121))(_122);
                if (_529 < 0) {
                    return _122;
                };
                return deleteAt(_529)(1)(_122);
            };
        };
    };
    var $$delete = function (__dict_Eq_81) {
        return deleteBy(Prelude["=="](__dict_Eq_81));
    };
    var $bslash$bslash = function (__dict_Eq_82) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__128) {
                    return function (__copy__129) {
                        var _128 = __copy__128;
                        var _129 = __copy__129;
                        tco: while (true) {
                            if (_129.length === 0) {
                                return _128;
                            };
                            if (_128.length === 0) {
                                return [  ];
                            };
                            if (_129.length >= 1) {
                                var _533 = _129.slice(1);
                                var __tco__128 = $$delete(__dict_Eq_82)(_129[0])(_128);
                                _128 = __tco__128;
                                _129 = _533;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushSTArrayImpl(arr, a) {
    return function() {
      arr.push(a);
      return {};
    };
  };
    var pushSTArray = function (arr) {
        return function (a) {
            return pushSTArrayImpl(arr, a);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        pushSTArray: pushSTArray, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        emptySTArray: emptySTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_136) {
        if (_136 instanceof Data_Maybe.Just) {
            return _136.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_138) {
        if (_138.length >= 1) {
            var _538 = _138.slice(1);
            return _538;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_137) {
        if (_137.length >= 1) {
            var _541 = _137.slice(1);
            return _137[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_83) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_83);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_84) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_84["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_84)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = function (x) {
        return x;
    };
    var showAll = new Prelude.Show(function (_144) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_144) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_145) {
        return function (_146) {
            return _145 && _146;
        };
    });
    var runAll = function (_139) {
        return _139;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_142) {
        return function (_143) {
            return _142 !== _143;
        };
    }, function (_140) {
        return function (_141) {
            return _140 === _141;
        };
    });
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = function (x) {
        return x;
    };
    var showAny = new Prelude.Show(function (_152) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_152) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_153) {
        return function (_154) {
            return _153 || _154;
        };
    });
    var runAny = function (_147) {
        return _147;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_150) {
        return function (_151) {
            return _150 !== _151;
        };
    }, function (_148) {
        return function (_149) {
            return _148 === _149;
        };
    });
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = function (x) {
        return x;
    };
    var showDual = function (__dict_Show_85) {
        return new Prelude.Show(function (_162) {
            return "Dual (" + (Prelude.show(__dict_Show_85)(_162) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_86) {
        return new Prelude.Semigroup(function (_163) {
            return function (_164) {
                return Prelude["<>"](__dict_Semigroup_86)(_164)(_163);
            };
        });
    };
    var runDual = function (_155) {
        return _155;
    };
    var monoidDual = function (__dict_Monoid_88) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_88["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_88));
    };
    var eqDual = function (__dict_Eq_89) {
        return new Prelude.Eq(function (_158) {
            return function (_159) {
                return Prelude["/="](__dict_Eq_89)(_158)(_159);
            };
        }, function (_156) {
            return function (_157) {
                return Prelude["=="](__dict_Eq_89)(_156)(_157);
            };
        });
    };
    var ordDual = function (__dict_Ord_87) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_87["__superclass_Prelude.Eq_0"]());
        }, function (_160) {
            return function (_161) {
                return Prelude.compare(__dict_Ord_87)(_160)(_161);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = function (x) {
        return x;
    };
    var semigroupEndo = new Prelude.Semigroup(function (_166) {
        return function (_167) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_166)(_167);
        };
    });
    var runEndo = function (_165) {
        return _165;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = function (x) {
        return x;
    };
    var showProduct = new Prelude.Show(function (_175) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_175) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_176) {
        return function (_177) {
            return _176 * _177;
        };
    });
    var runProduct = function (_168) {
        return _168;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_171) {
        return function (_172) {
            return _171 !== _172;
        };
    }, function (_169) {
        return function (_170) {
            return _169 === _170;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_173) {
        return function (_174) {
            return Prelude.compare(Prelude.ordNumber)(_173)(_174);
        };
    });
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = function (x) {
        return x;
    };
    var showSum = new Prelude.Show(function (_185) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_185) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_186) {
        return function (_187) {
            return _186 + _187;
        };
    });
    var runSum = function (_178) {
        return _178;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_181) {
        return function (_182) {
            return _181 !== _182;
        };
    }, function (_179) {
        return function (_180) {
            return _179 === _180;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_183) {
        return function (_184) {
            return Prelude.compare(Prelude.ordNumber)(_183)(_184);
        };
    });
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_192) {
        if (_192.length >= 1) {
            var _598 = _192.slice(1);
            var _592 = unzip(_598);
            return new Tuple(Prelude[":"]((_192[0]).value0)(_592.value0), Prelude[":"]((_192[0]).value1)(_592.value1));
        };
        if (_192.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_190) {
        return function (_191) {
            return _190(_191.value0)(_191.value1);
        };
    };
    var swap = function (_193) {
        return new Tuple(_193.value1, _193.value0);
    };
    var snd = function (_189) {
        return _189.value1;
    };
    var showTuple = function (__dict_Show_90) {
        return function (__dict_Show_91) {
            return new Prelude.Show(function (_194) {
                return "Tuple (" + (Prelude.show(__dict_Show_90)(_194.value0) + (") (" + (Prelude.show(__dict_Show_91)(_194.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_199) {
        return function (_200) {
            return new Tuple(_200.value0, _199.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_92) {
        return function (__dict_Semigroup_93) {
            return new Prelude.Semigroup(function (_201) {
                return function (_202) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_92)(_201.value0)(_202.value0), Prelude["<>"](__dict_Semigroup_93)(_201.value1)(_202.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_96) {
        return function (__dict_Monoid_97) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_96["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_97["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_96), Data_Monoid.mempty(__dict_Monoid_97)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_203) {
        return function (_204) {
            return new Tuple(_204.value0, _203(_204.value1));
        };
    });
    var fst = function (_188) {
        return _188.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_99) {
        return function (__dict_Lazy1_100) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_99)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_100)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_101) {
        return function (__dict_Lazy2_102) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_101)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_102)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_103) {
        return function (__dict_Lazy_104) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_103)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_104)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_209) {
        return function (_210) {
            return new Tuple(_210.value0, _209(_210));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_105) {
        return function (__dict_Eq_106) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_105)(__dict_Eq_106))(t1)(t2);
                };
            }, function (_195) {
                return function (_196) {
                    return Prelude["=="](__dict_Eq_105)(_195.value0)(_196.value0) && Prelude["=="](__dict_Eq_106)(_195.value1)(_196.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_94) {
        return function (__dict_Ord_95) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_94["__superclass_Prelude.Eq_0"]())(__dict_Ord_95["__superclass_Prelude.Eq_0"]());
            }, function (_197) {
                return function (_198) {
                    var _643 = Prelude.compare(__dict_Ord_94)(_197.value0)(_198.value0);
                    if (_643 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_95)(_197.value1)(_198.value1);
                    };
                    return _643;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_108) {
        return new Prelude.Apply(function (_205) {
            return function (_206) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_108)(_205.value0)(_206.value0), _205.value1(_206.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_107) {
        return new Prelude.Bind(function (_207) {
            return function (_208) {
                var _656 = _208(_207.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_107)(_207.value0)(_656.value0), _656.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_107);
        });
    };
    var applicativeTuple = function (__dict_Monoid_109) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_109["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_109)));
    };
    var monadTuple = function (__dict_Monoid_98) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_98);
        }, function () {
            return bindTuple(__dict_Monoid_98["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Data_Tuple = PS.Data_Tuple;
    var EnvT = function (x) {
        return x;
    };
    var withEnvT = function (_212) {
        return function (_213) {
            return EnvT(new Data_Tuple.Tuple(_212(_213.value0), _213.value1));
        };
    };
    var runEnvT = function (_211) {
        return _211;
    };
    var mapEnvT = function (_214) {
        return function (_215) {
            return EnvT(new Data_Tuple.Tuple(_215.value0, _214(_215.value1)));
        };
    };
    var functorEnvT = function (__dict_Functor_110) {
        return new Prelude.Functor(function (_216) {
            return function (_217) {
                return EnvT(new Data_Tuple.Tuple(_217.value0, Prelude["<$>"](__dict_Functor_110)(_216)(_217.value1)));
            };
        });
    };
    var extendEnvT = function (__dict_Extend_111) {
        return new Control_Extend.Extend(function (_218) {
            return function (_219) {
                return EnvT(new Data_Tuple.Tuple(_219.value0, Prelude["<$>"](__dict_Extend_111["__superclass_Prelude.Functor_0"]())(_218)(Control_Extend["<<="](__dict_Extend_111)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tuple.Tuple.create(_219.value0))(EnvT))(_219.value1))));
            };
        }, function () {
            return functorEnvT(__dict_Extend_111["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransEnvT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_112) {
        return function (_221) {
            return _221.value1;
        };
    });
    var comonadEnvT = function (__dict_Comonad_113) {
        return new Control_Comonad.Comonad(function () {
            return extendEnvT(__dict_Comonad_113["__superclass_Control.Extend.Extend_0"]());
        }, function (_220) {
            return Control_Comonad.extract(__dict_Comonad_113)(_220.value1);
        });
    };
    return {
        EnvT: EnvT, 
        mapEnvT: mapEnvT, 
        withEnvT: withEnvT, 
        runEnvT: runEnvT, 
        functorEnvT: functorEnvT, 
        extendEnvT: extendEnvT, 
        comonadEnvT: comonadEnvT, 
        comonadTransEnvT: comonadTransEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var StoreT = function (x) {
        return x;
    };
    var runStoreT = function (_222) {
        return _222;
    };
    var functorStoreT = function (__dict_Functor_114) {
        return new Prelude.Functor(function (_223) {
            return function (_224) {
                return StoreT(new Data_Tuple.Tuple(Prelude["<$>"](__dict_Functor_114)(function (h) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(h)(_223);
                })(_224.value0), _224.value1));
            };
        });
    };
    var extendStoreT = function (__dict_Extend_115) {
        return new Control_Extend.Extend(function (_225) {
            return function (_226) {
                return StoreT(new Data_Tuple.Tuple(Control_Extend["<<="](__dict_Extend_115)(function (w$prime) {
                    return function (s$prime) {
                        return _225(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                    };
                })(_226.value0), _226.value1));
            };
        }, function () {
            return functorStoreT(__dict_Extend_115["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransStoreT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_116) {
        return function (_228) {
            return Prelude["<$>"]((__dict_Comonad_116["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                return f(_228.value1);
            })(_228.value0);
        };
    });
    var comonadStoreT = function (__dict_Comonad_117) {
        return new Control_Comonad.Comonad(function () {
            return extendStoreT(__dict_Comonad_117["__superclass_Control.Extend.Extend_0"]());
        }, function (_227) {
            return Control_Comonad.extract(__dict_Comonad_117)(_227.value0)(_227.value1);
        });
    };
    return {
        StoreT: StoreT, 
        runStoreT: runStoreT, 
        functorStoreT: functorStoreT, 
        extendStoreT: extendStoreT, 
        comonadStoreT: comonadStoreT, 
        comonadTransStoreT: comonadTransStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var ComonadStore = function (__superclass_Control$dotComonad$dotComonad_0, peek, pos) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.peek = peek;
        this.pos = pos;
    };
    var pos = function (dict) {
        return dict.pos;
    };
    var peek = function (dict) {
        return dict.peek;
    };
    var peeks = function (__dict_ComonadStore_118) {
        return function (f) {
            return function (x) {
                return peek(__dict_ComonadStore_118)(f(pos(__dict_ComonadStore_118)(x)))(x);
            };
        };
    };
    var seeks = function (__dict_ComonadStore_119) {
        return function (__dict_Extend_120) {
            return function (f) {
                return function (x) {
                    return peeks(__dict_ComonadStore_119)(f)(Control_Extend.duplicate(__dict_Extend_120)(x));
                };
            };
        };
    };
    var seek = function (__dict_ComonadStore_121) {
        return function (__dict_Extend_122) {
            return function (s) {
                return function (x) {
                    return peek(__dict_ComonadStore_121)(s)(Control_Extend.duplicate(__dict_Extend_122)(x));
                };
            };
        };
    };
    var experiment = function (__dict_ComonadStore_123) {
        return function (__dict_Functor_124) {
            return function (f) {
                return function (x) {
                    return Prelude["<$>"](__dict_Functor_124)(Prelude.flip(peek(__dict_ComonadStore_123))(x))(f(pos(__dict_ComonadStore_123)(x)));
                };
            };
        };
    };
    var comonadStoreStoreT = function (__dict_Comonad_125) {
        return new ComonadStore(function () {
            return Control_Comonad_Store_Trans.comonadStoreT(__dict_Comonad_125);
        }, function (_230) {
            return function (_231) {
                return Control_Comonad.extract(__dict_Comonad_125)(_231.value0)(_230);
            };
        }, function (_229) {
            return _229.value1;
        });
    };
    return {
        ComonadStore: ComonadStore, 
        seeks: seeks, 
        seek: seek, 
        peeks: peeks, 
        experiment: experiment, 
        peek: peek, 
        pos: pos, 
        comonadStoreStoreT: comonadStoreStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Data_Tuple = PS.Data_Tuple;
    var TracedT = function (x) {
        return x;
    };
    var runTracedT = function (_232) {
        return _232;
    };
    var functorTracedT = function (__dict_Functor_126) {
        return new Prelude.Functor(function (_233) {
            return function (_234) {
                return Prelude["<$>"](__dict_Functor_126)(function (g) {
                    return function (t) {
                        return _233(g(t));
                    };
                })(_234);
            };
        });
    };
    var extendTracedT = function (__dict_Extend_127) {
        return function (__dict_Semigroup_128) {
            return new Control_Extend.Extend(function (_235) {
                return function (_236) {
                    return Control_Extend["<<="](__dict_Extend_127)(function (w_1) {
                        return function (t) {
                            return _235(Prelude["<$>"](__dict_Extend_127["__superclass_Prelude.Functor_0"]())(function (h) {
                                return function (t$prime) {
                                    return h(Prelude["<>"](__dict_Semigroup_128)(t)(t$prime));
                                };
                            })(w_1));
                        };
                    })(_236);
                };
            }, function () {
                return functorTracedT(__dict_Extend_127["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var comonadTransTracedT = function (__dict_Monoid_129) {
        return new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_130) {
            return function (_238) {
                return Prelude["<$>"]((__dict_Comonad_130["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                    return f(Data_Monoid.mempty(__dict_Monoid_129));
                })(_238);
            };
        });
    };
    var comonadTracedT = function (__dict_Comonad_131) {
        return function (__dict_Monoid_132) {
            return new Control_Comonad.Comonad(function () {
                return extendTracedT(__dict_Comonad_131["__superclass_Control.Extend.Extend_0"]())(__dict_Monoid_132["__superclass_Prelude.Semigroup_0"]());
            }, function (_237) {
                return Control_Comonad.extract(__dict_Comonad_131)(_237)(Data_Monoid.mempty(__dict_Monoid_132));
            });
        };
    };
    return {
        TracedT: TracedT, 
        runTracedT: runTracedT, 
        functorTracedT: functorTracedT, 
        extendTracedT: extendTracedT, 
        comonadTracedT: comonadTracedT, 
        comonadTransTracedT: comonadTransTracedT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var ComonadTraced = function (__superclass_Control$dotComonad$dotComonad_0, track) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.track = track;
    };
    var track = function (dict) {
        return dict.track;
    };
    var tracks = function (__dict_Comonad_133) {
        return function (__dict_ComonadTraced_134) {
            return function (f) {
                return function (w) {
                    return track(__dict_ComonadTraced_134)(f(Control_Comonad.extract(__dict_Comonad_133)(w)))(w);
                };
            };
        };
    };
    var listens = function (__dict_Functor_135) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_135)(function (g) {
                    return function (t) {
                        return new Data_Tuple.Tuple(g(t), f(t));
                    };
                })(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    var listen = function (__dict_Functor_136) {
        return function (tr) {
            return Prelude["<$>"](__dict_Functor_136)(function (f) {
                return function (t) {
                    return new Data_Tuple.Tuple(f(t), t);
                };
            })(Control_Comonad_Traced_Trans.runTracedT(tr));
        };
    };
    var comonadTracedTracedT = function (__dict_Comonad_137) {
        return function (__dict_Monoid_138) {
            return new ComonadTraced(function () {
                return Control_Comonad_Traced_Trans.comonadTracedT(__dict_Comonad_137)(__dict_Monoid_138);
            }, function (t) {
                return function (tr) {
                    return Control_Comonad.extract(__dict_Comonad_137)(Control_Comonad_Traced_Trans.runTracedT(tr))(t);
                };
            });
        };
    };
    var censor = function (__dict_Functor_139) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_139)(Prelude[">>>"](Prelude.semigroupoidArr)(f))(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    return {
        ComonadTraced: ComonadTraced, 
        censor: censor, 
        listens: listens, 
        listen: listen, 
        tracks: tracks, 
        track: track, 
        comonadTracedTracedT: comonadTracedTracedT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var ErrorT = function (x) {
        return x;
    };
    var runErrorT = function (_239) {
        return _239;
    };
    var monadTransErrorT = function (__dict_Error_142) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_143) {
            return function (m) {
                return ErrorT(Prelude[">>="](__dict_Monad_143["__superclass_Prelude.Bind_1"]())(m)(function (_7) {
                    return Prelude["return"](__dict_Monad_143)(new Data_Either.Right(_7));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_148) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_148["__superclass_Prelude.Bind_1"]())(m)(function (_9) {
                    return Prelude["return"](__dict_Monad_148)((function () {
                        if (_9 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_9.value0), Prelude.id(Prelude.categoryArr));
                        };
                        if (_9 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_9.value0.value0), _9.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_149) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_149["__superclass_Prelude.Bind_1"]())(listen(m))(function (_8) {
                    return Prelude["return"](__dict_Monad_149)(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                        return new Data_Tuple.Tuple(r, _8.value1);
                    })(_8.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_150) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(ErrorT)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_150)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_153) {
        return new Prelude.Apply(function (_240) {
            return function (_241) {
                return ErrorT(Prelude["<*>"](__dict_Apply_153)(Prelude["<$>"](__dict_Apply_153["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_240))(_241));
            };
        }, function () {
            return functorErrorT(__dict_Apply_153["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_151) {
        return function (__dict_Error_152) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT(Prelude[">>="](__dict_Monad_151["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_6) {
                        if (_6 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_151)(new Data_Either.Left(_6.value0));
                        };
                        if (_6 instanceof Data_Either.Right) {
                            return runErrorT(f(_6.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_151["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_154) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_154["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT(Prelude.pure(__dict_Applicative_154)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_146) {
        return function (__dict_Error_147) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_146["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_146)(__dict_Error_147);
            });
        };
    };
    var altErrorT = function (__dict_Monad_157) {
        return function (__dict_Error_158) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT(Prelude[">>="](__dict_Monad_157["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_157)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_157["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_140) {
        return function (__dict_Error_141) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_140)(__dict_Error_141);
            }, Prelude["return"](__dict_Monad_140)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_141)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_155) {
        return function (__dict_Error_156) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_155)(__dict_Error_156);
            }, function () {
                return applicativeErrorT(__dict_Monad_155["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_144) {
        return function (__dict_Error_145) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_144)(__dict_Error_145);
            }, function () {
                return monadErrorT(__dict_Monad_144)(__dict_Error_145);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        liftCallCCError: liftCallCCError, 
        liftPassError: liftPassError, 
        liftListenError: liftListenError, 
        mapErrorT: mapErrorT, 
        runErrorT: runErrorT, 
        functorErrorT: functorErrorT, 
        applyErrorT: applyErrorT, 
        applicativeErrorT: applicativeErrorT, 
        altErrorT: altErrorT, 
        plusErrorT: plusErrorT, 
        alternativeErrorT: alternativeErrorT, 
        bindErrorT: bindErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = function (x) {
        return x;
    };
    var runMaybeT = function (_242) {
        return _242;
    };
    var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_159) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude.liftM1(__dict_Monad_159)(Data_Maybe.Just.create));
    });
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_161) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_161["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_161)((function () {
                        if (_12 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr));
                        };
                        if (_12 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_12.value0.value0), _12.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_162) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_162["__superclass_Prelude.Bind_1"]())(listen(m))(function (_11) {
                    return Prelude["return"](__dict_Monad_162)(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                        return new Data_Tuple.Tuple(r, _11.value1);
                    })(_11.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr)(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var monadMaybeT = function (__dict_Monad_160) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_160);
        }, function () {
            return bindMaybeT(__dict_Monad_160);
        });
    };
    var functorMaybeT = function (__dict_Monad_163) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_163)));
    };
    var bindMaybeT = function (__dict_Monad_164) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT(Prelude[">>="](__dict_Monad_164["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_10) {
                    if (_10 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_164)(Data_Maybe.Nothing.value);
                    };
                    if (_10 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_10.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_164);
        });
    };
    var applyMaybeT = function (__dict_Monad_165) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_165)), function () {
            return functorMaybeT(__dict_Monad_165);
        });
    };
    var applicativeMaybeT = function (__dict_Monad_166) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_166);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Monad_166["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    return {
        MaybeT: MaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftPassMaybe: liftPassMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        mapMaybeT: mapMaybeT, 
        runMaybeT: runMaybeT, 
        functorMaybeT: functorMaybeT, 
        applyMaybeT: applyMaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        bindMaybeT: bindMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var RWST = function (x) {
        return x;
    };
    var runRWST = function (_245) {
        return _245;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_169) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_170) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_171) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_171["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_171)(mkSee(__dict_Monoid_170)(s)(a)(Data_Monoid.mempty(__dict_Monoid_170)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_172) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_172)(function (see) {
                            var _745 = {};
                            for (var _746 in see) {
                                if (see.hasOwnProperty(_746)) {
                                    _745[_746] = see[_746];
                                };
                            };
                            _745.result = f(see.result);
                            return _745;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_173) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_173["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_173)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_174) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_174["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_174)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_177) {
        return function (__dict_Semigroup_178) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_177)(Prelude["<$>"](__dict_Apply_177["__superclass_Prelude.Functor_0"]())(function (_243) {
                                return function (see) {
                                    var _748 = {};
                                    for (var _749 in see) {
                                        if (see.hasOwnProperty(_749)) {
                                            _748[_749] = see[_749];
                                        };
                                    };
                                    _748.result = _243.result(see.result);
                                    _748.log = Prelude["<>"](__dict_Semigroup_178)(_243.log)(see.log);
                                    return _748;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_177["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_175) {
        return function (__dict_Semigroup_176) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_175)(runRWST(m)(r)(s))(function (_244) {
                                return Prelude["<$>"]((__dict_Bind_175["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _753 = {};
                                    for (var _754 in see$prime) {
                                        if (see$prime.hasOwnProperty(_754)) {
                                            _753[_754] = see$prime[_754];
                                        };
                                    };
                                    _753.log = Prelude["<>"](__dict_Semigroup_176)(_244.log)(see$prime.log);
                                    return _753;
                                })(runRWST(f(_244.result))(r)(_244.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_175["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_176);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_179) {
        return function (__dict_Monoid_180) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_179["__superclass_Prelude.Apply_0"]())(__dict_Monoid_180["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_179)(mkSee(__dict_Monoid_180)(s)(a)(Data_Monoid.mempty(__dict_Monoid_180)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_167) {
        return function (__dict_Monoid_168) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_167["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_168);
            }, function () {
                return bindRWST(__dict_Monad_167["__superclass_Prelude.Bind_1"]())(__dict_Monoid_168["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        withRWST: withRWST, 
        mapRWST: mapRWST, 
        execRWST: execRWST, 
        evalRWST: evalRWST, 
        runRWST: runRWST, 
        mkSee: mkSee, 
        functorRWST: functorRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        applicativeRWST: applicativeRWST, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Lazy = PS.Control_Lazy;
    var StateT = function (x) {
        return x;
    };
    var runStateT = function (_246) {
        return _246;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT(Prelude["<<<"](Prelude.semigroupoidArr)(runStateT(s))(f));
        };
    };
    var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_183) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_183["__superclass_Prelude.Bind_1"]())(m)(function (_14) {
                    return Prelude["return"](__dict_Monad_183)(new Data_Tuple.Tuple(_14, s));
                });
            };
        };
    });
    var mapStateT = function (f) {
        return function (m) {
            return StateT(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_186) {
        return function (pass) {
            return function (m) {
                return StateT(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_186["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_16) {
                        return Prelude["return"](__dict_Monad_186)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_16.value0.value0, _16.value1), _16.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_187) {
        return function (listen) {
            return function (m) {
                return StateT(function (s) {
                    return Prelude[">>="](__dict_Monad_187["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_15) {
                        return Prelude["return"](__dict_Monad_187)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_15.value0.value0, _15.value1), _15.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = new Control_Lazy.Lazy1(function (f) {
        return StateT(function (s) {
            return runStateT(f(Prelude.unit))(s);
        });
    });
    var execStateT = function (__dict_Apply_189) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_189["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
            };
        };
    };
    var evalStateT = function (__dict_Apply_190) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_190["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
            };
        };
    };
    var monadStateT = function (__dict_Monad_184) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_184);
        }, function () {
            return bindStateT(__dict_Monad_184);
        });
    };
    var functorStateT = function (__dict_Monad_188) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_188)));
    };
    var bindStateT = function (__dict_Monad_191) {
        return new Prelude.Bind(function (_247) {
            return function (_248) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_191["__superclass_Prelude.Bind_1"]())(_247(s))(function (_13) {
                        return runStateT(_248(_13.value0))(_13.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_191);
        });
    };
    var applyStateT = function (__dict_Monad_192) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_192)), function () {
            return functorStateT(__dict_Monad_192);
        });
    };
    var applicativeStateT = function (__dict_Monad_193) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_193);
        }, function (a) {
            return StateT(function (s) {
                return Prelude["return"](__dict_Monad_193)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var altStateT = function (__dict_Monad_196) {
        return function (__dict_Alt_197) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_197)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_196);
            });
        };
    };
    var plusStateT = function (__dict_Monad_181) {
        return function (__dict_Plus_182) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_181)(__dict_Plus_182["__superclass_Control.Alt.Alt_0"]());
            }, StateT(function (_) {
                return Control_Plus.empty(__dict_Plus_182);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_194) {
        return function (__dict_Alternative_195) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_194)(__dict_Alternative_195["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_194);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_185) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_185["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_185["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_185["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCallCCState: liftCallCCState, 
        liftPassState: liftPassState, 
        liftListenState: liftListenState, 
        liftCatchState: liftCatchState, 
        withStateT: withStateT, 
        mapStateT: mapStateT, 
        execStateT: execStateT, 
        evalStateT: evalStateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        altStateT: altStateT, 
        plusStateT: plusStateT, 
        alternativeStateT: alternativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadTransStateT: monadTransStateT, 
        lazy1StateT: lazy1StateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = function (x) {
        return x;
    };
    var runWriterT = function (_250) {
        return _250;
    };
    var monadTransWriterT = function (__dict_Monoid_202) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_203) {
            return function (m) {
                return WriterT(Prelude[">>="](__dict_Monad_203["__superclass_Prelude.Bind_1"]())(m)(function (_19) {
                    return Prelude["return"](__dict_Monad_203)(new Data_Tuple.Tuple(_19, Data_Monoid.mempty(__dict_Monoid_202)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_206) {
        return function (callCC) {
            return function (f) {
                return WriterT(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_206))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_207) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_207)(function (_249) {
                return new Data_Tuple.Tuple(f(_249.value0), _249.value1);
            }));
        });
    };
    var execWriterT = function (__dict_Apply_208) {
        return function (m) {
            return Prelude["<$>"](__dict_Apply_208["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runWriterT(m));
        };
    };
    var applyWriterT = function (__dict_Monoid_211) {
        return function (__dict_Apply_212) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT((function () {
                        var k = function (_251) {
                            return function (_252) {
                                return new Data_Tuple.Tuple(_251.value0(_252.value0), Prelude["<>"](__dict_Monoid_211["__superclass_Prelude.Semigroup_0"]())(_251.value1)(_252.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_212)(Prelude["<$>"](__dict_Apply_212["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_212["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_209) {
        return function (__dict_Monad_210) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT(Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_18) {
                        return Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(runWriterT(k(_18.value0)))(function (_17) {
                            return Prelude["return"](__dict_Monad_210)(new Data_Tuple.Tuple(_17.value0, Prelude["<>"](__dict_Monoid_209["__superclass_Prelude.Semigroup_0"]())(_18.value1)(_17.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_209)((__dict_Monad_210["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_213) {
        return function (__dict_Applicative_214) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_213)(__dict_Applicative_214["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT(Prelude.pure(__dict_Applicative_214)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_213))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_200) {
        return function (__dict_Monad_201) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_200)(__dict_Monad_201["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_200)(__dict_Monad_201);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_217) {
        return function (__dict_Alt_218) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT(Control_Alt["<|>"](__dict_Alt_218)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_218["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_198) {
        return function (__dict_Plus_199) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_198)(__dict_Plus_199["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_199));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_215) {
        return function (__dict_Alternative_216) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_215)(__dict_Alternative_216["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_215)(__dict_Alternative_216["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_204) {
        return function (__dict_MonadPlus_205) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_204)(__dict_MonadPlus_205["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_204)(__dict_MonadPlus_205["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        execWriterT: execWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT, 
        altWriterT: altWriterT, 
        plusWriterT: plusWriterT, 
        alternativeWriterT: alternativeWriterT, 
        bindWriterT: bindWriterT, 
        monadWriterT: monadWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Prelude = PS.Prelude;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Monoid = PS.Data_Monoid;
    var MonadCont = function (callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_219) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_220) {
        return function (__dict_MonadCont_221) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_221)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_222) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_222)));
    };
    var monadContReaderT = function (__dict_MonadCont_223) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_223)));
    };
    var monadContStateT = function (__dict_MonadCont_224) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_224)));
    };
    var monadWriterT = function (__dict_Monoid_225) {
        return function (__dict_MonadCont_226) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_225)(callCC(__dict_MonadCont_226)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var MonadError = function (catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_227) {
        return function (__dict_Error_228) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT(Prelude[">>="](__dict_Monad_227["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_20) {
                        if (_20 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_20.value0));
                        };
                        if (_20 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_227)(new Data_Either.Right(_20.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT(Prelude["return"](__dict_Monad_227)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_229) {
        return new MonadError(function (_253) {
            return function (_254) {
                if (_253 instanceof Data_Either.Left) {
                    return _254(_253.value0);
                };
                if (_253 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_253.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_230) {
        return function (__dict_MonadError_231) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_231)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_230)(throwError(__dict_MonadError_231)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_232) {
        return function (__dict_MonadError_233) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_233)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_232)(throwError(__dict_MonadError_233)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_234) {
        return function (__dict_MonadError_235) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_235)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_234)(throwError(__dict_MonadError_235)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_236) {
        return function (__dict_Monoid_237) {
            return function (__dict_MonadError_238) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_238)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_237))(__dict_Monad_236)(throwError(__dict_MonadError_238)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        throwError: throwError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorWriterT: monadErrorWriterT, 
        monadErrorStateT: monadErrorStateT
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_262) {
            return f(_262.value0)(_262.value1.value0)(_262.value1.value1.value0)(_262.value1.value1.value1.value0)(_262.value1.value1.value1.value1.value0)(_262.value1.value1.value1.value1.value1.value0)(_262.value1.value1.value1.value1.value1.value1.value0)(_262.value1.value1.value1.value1.value1.value1.value1.value0)(_262.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_261) {
            return f(_261.value0)(_261.value1.value0)(_261.value1.value1.value0)(_261.value1.value1.value1.value0)(_261.value1.value1.value1.value1.value0)(_261.value1.value1.value1.value1.value1.value0)(_261.value1.value1.value1.value1.value1.value1.value0)(_261.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_260) {
            return f(_260.value0)(_260.value1.value0)(_260.value1.value1.value0)(_260.value1.value1.value1.value0)(_260.value1.value1.value1.value1.value0)(_260.value1.value1.value1.value1.value1.value0)(_260.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_259) {
            return f(_259.value0)(_259.value1.value0)(_259.value1.value1.value0)(_259.value1.value1.value1.value0)(_259.value1.value1.value1.value1.value0)(_259.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_258) {
            return f(_258.value0)(_258.value1.value0)(_258.value1.value1.value0)(_258.value1.value1.value1.value0)(_258.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_257) {
            return f(_257.value0)(_257.value1.value0)(_257.value1.value1.value0)(_257.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_256) {
            return f(_256.value0)(_256.value1.value0)(_256.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_255) {
            return f(_255.value0)(_255.value1);
        };
    };
    var con10 = function (f) {
        return function (_263) {
            return f(_263.value0)(_263.value1.value0)(_263.value1.value1.value0)(_263.value1.value1.value1.value0)(_263.value1.value1.value1.value1.value0)(_263.value1.value1.value1.value1.value1.value0)(_263.value1.value1.value1.value1.value1.value1.value0)(_263.value1.value1.value1.value1.value1.value1.value1.value0)(_263.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_263.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con9: con9, 
        con8: con8, 
        con7: con7, 
        con6: con6, 
        con5: con5, 
        con4: con4, 
        con3: con3, 
        con2: con2
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = function (x) {
        return x;
    };
    var showFirst = function (__dict_Show_239) {
        return new Prelude.Show(function (_271) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_239))(_271) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_272) {
        return function (_273) {
            if (_272 instanceof Data_Maybe.Just) {
                return _272;
            };
            return _273;
        };
    });
    var runFirst = function (_264) {
        return _264;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_241) {
        return new Prelude.Eq(function (_267) {
            return function (_268) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_241))(_267)(_268);
            };
        }, function (_265) {
            return function (_266) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_241))(_265)(_266);
            };
        });
    };
    var ordFirst = function (__dict_Ord_240) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_240["__superclass_Prelude.Eq_0"]());
        }, function (_269) {
            return function (_270) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_240))(_269)(_270);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_242) {
        return function (__dict_Foldable_243) {
            return function (f) {
                return foldr(__dict_Foldable_243)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_242["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_242)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_244) {
        return function (__dict_Foldable_245) {
            return Prelude.flip(traverse_(__dict_Applicative_244)(__dict_Foldable_245));
        };
    };
    var sequence_ = function (__dict_Applicative_246) {
        return function (__dict_Foldable_247) {
            return traverse_(__dict_Applicative_246)(__dict_Foldable_247)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_248) {
        return function (__dict_Monoid_249) {
            return function (sep) {
                return function (xs) {
                    var go = function (_299) {
                        return function (_300) {
                            if (_299.init) {
                                return {
                                    init: false, 
                                    acc: _300
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_249["__superclass_Prelude.Semigroup_0"]())(_299.acc)(Prelude["<>"](__dict_Monoid_249["__superclass_Prelude.Semigroup_0"]())(sep)(_300))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_248)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_249)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_250) {
        return function (__dict_Monoid_251) {
            return foldl(__dict_Foldable_250)(Prelude["<>"](__dict_Monoid_251["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_251));
        };
    };
    var or = function (__dict_Foldable_252) {
        return foldl(__dict_Foldable_252)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_253) {
        return foldl(__dict_Foldable_253)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_254) {
        return foldl(__dict_Foldable_254)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_255) {
        return function (_297) {
            return function (_298) {
                return _297(_298.value1);
            };
        };
    }, function (_294) {
        return function (_295) {
            return function (_296) {
                return _294(_295)(_296.value1);
            };
        };
    }, function (_291) {
        return function (_292) {
            return function (_293) {
                return _291(_293.value1)(_292);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_256) {
        return function (_289) {
            return function (_290) {
                if (_290 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_256);
                };
                if (_290 instanceof Data_Maybe.Just) {
                    return _289(_290.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_286) {
        return function (_287) {
            return function (_288) {
                if (_288 instanceof Data_Maybe.Nothing) {
                    return _287;
                };
                if (_288 instanceof Data_Maybe.Just) {
                    return _286(_287)(_288.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_283) {
        return function (_284) {
            return function (_285) {
                if (_285 instanceof Data_Maybe.Nothing) {
                    return _284;
                };
                if (_285 instanceof Data_Maybe.Just) {
                    return _283(_285.value0)(_284);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_257) {
        return function (_281) {
            return function (_282) {
                if (_282 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_257);
                };
                if (_282 instanceof Data_Either.Right) {
                    return _281(_282.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_278) {
        return function (_279) {
            return function (_280) {
                if (_280 instanceof Data_Either.Left) {
                    return _279;
                };
                if (_280 instanceof Data_Either.Right) {
                    return _278(_279)(_280.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_275) {
        return function (_276) {
            return function (_277) {
                if (_277 instanceof Data_Either.Left) {
                    return _276;
                };
                if (_277 instanceof Data_Either.Right) {
                    return _275(_277.value0)(_276);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_258) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_258["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_258))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_259) {
        return function (__dict_Foldable_260) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_260)(Data_Monoid_First.monoidFirst)(function (_274) {
                        var _954 = Prelude["=="](__dict_Eq_259)(a)(_274.value0);
                        if (_954) {
                            return new Data_Maybe.Just(_274.value1);
                        };
                        if (!_954) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_261) {
        return function (__dict_Monoid_262) {
            return foldMap(__dict_Foldable_261)(__dict_Monoid_262)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_263) {
        return function (p) {
            return function (f) {
                var _958 = foldMap(__dict_Foldable_263)(Data_Monoid.monoidArray)(function (x) {
                    var _957 = p(x);
                    if (_957) {
                        return [ x ];
                    };
                    if (!_957) {
                        return [  ];
                    };
                    throw new Error("Failed pattern match");
                })(f);
                if (_958.length >= 1) {
                    var _960 = _958.slice(1);
                    return new Data_Maybe.Just(_958[0]);
                };
                if (_958.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_264) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_264)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_265) {
        return function (__dict_Foldable_266) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_266))(Prelude["=="](__dict_Eq_265));
        };
    };
    var notElem = function (__dict_Eq_267) {
        return function (__dict_Foldable_268) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_267)(__dict_Foldable_268)(x));
            };
        };
    };
    var and = function (__dict_Foldable_269) {
        return foldl(__dict_Foldable_269)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_270) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_270)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = function (x) {
        return x;
    };
    var showLast = function (__dict_Show_271) {
        return new Prelude.Show(function (_308) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_271))(_308) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_309) {
        return function (_310) {
            if (_310 instanceof Data_Maybe.Just) {
                return _310;
            };
            if (_310 instanceof Data_Maybe.Nothing) {
                return _309;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_301) {
        return _301;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_273) {
        return new Prelude.Eq(function (_304) {
            return function (_305) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_273))(_304)(_305);
            };
        }, function (_302) {
            return function (_303) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_273))(_302)(_303);
            };
        });
    };
    var ordLast = function (__dict_Ord_272) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_272["__superclass_Prelude.Eq_0"]());
        }, function (_306) {
            return function (_307) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_272))(_306)(_307);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;
    
    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;
    
    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toCharArray(s) {
      return s.split('');
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function toUpper(s) {
      return s.toUpperCase();
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var takeWhile = function (p) {
        return function (s) {
            return take(count(p)(s))(s);
        };
    };
    var $$null = function (s) {
        return length(s) === 0;
    };
    var uncons = function (_311) {
        if ($$null(_311)) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just({
            head: Data_String_Unsafe.charAt(0)(_311), 
            tail: drop(1)(_311)
        });
    };
    var fromChar = Data_Char.charString;
    var singleton = fromChar;
    var dropWhile = function (p) {
        return function (s) {
            return drop(count(p)(s))(s);
        };
    };
    var charCodeAt = function (n) {
        return function (s) {
            return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        joinWith: joinWith, 
        trim: trim, 
        toUpper: toUpper, 
        toLower: toLower, 
        toCharArray: toCharArray, 
        split: split, 
        dropWhile: dropWhile, 
        drop: drop, 
        takeWhile: takeWhile, 
        take: take, 
        count: count, 
        replace: replace, 
        localeCompare: localeCompare, 
        singleton: singleton, 
        length: length, 
        uncons: uncons, 
        "null": $$null, 
        "lastIndexOf'": lastIndexOf$prime, 
        lastIndexOf: lastIndexOf, 
        "indexOf'": indexOf$prime, 
        indexOf: indexOf, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function showRegex$prime(r) {
    return '' + r;
  }
  ;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function source(r) {
    return r.source;
  }
  ;
    
  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    
  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;
    
  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;
    
  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
    var showRegex = new Prelude.Show(showRegex$prime);
    var renderFlags = function (flags) {
        return (function () {
            if (flags.global) {
                return "g";
            };
            if (!flags.global) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.ignoreCase) {
                return "i";
            };
            if (!flags.ignoreCase) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.multiline) {
                return "m";
            };
            if (!flags.multiline) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.sticky) {
                return "y";
            };
            if (!flags.sticky) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + (function () {
            if (flags.unicode) {
                return "u";
            };
            if (!flags.unicode) {
                return "";
            };
            throw new Error("Failed pattern match");
        })())));
    };
    var regex = function (source) {
        return function (flags) {
            return regex$prime(source)(renderFlags(flags));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        split: split, 
        search: search, 
        "replace'": replace$prime, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        flags: flags, 
        source: source, 
        regex: regex, 
        showRegex: showRegex
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var StateR = function (x) {
        return x;
    };
    var StateL = function (x) {
        return x;
    };
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_275) {
        return function (_325) {
            return Prelude["<$>"]((__dict_Applicative_275["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_325.value0))(_325.value1);
        };
    }, function (__dict_Applicative_274) {
        return function (_323) {
            return function (_324) {
                return Prelude["<$>"]((__dict_Applicative_274["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_324.value0))(_323(_324.value1));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_277) {
        return function (_322) {
            if (_322 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_277)(Data_Maybe.Nothing.value);
            };
            if (_322 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_277["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_322.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_276) {
        return function (_320) {
            return function (_321) {
                if (_321 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_276)(Data_Maybe.Nothing.value);
                };
                if (_321 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_276["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_320(_321.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_279) {
        return function (_319) {
            if (_319 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_279)(new Data_Either.Left(_319.value0));
            };
            if (_319 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_279["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_319.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_278) {
        return function (_317) {
            return function (_318) {
                if (_318 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_278)(new Data_Either.Left(_318.value0));
                };
                if (_318 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_278["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_317(_318.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_313) {
        return _313;
    };
    var stateL = function (_312) {
        return _312;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_281) {
        return function (_316) {
            if (_316.length === 0) {
                return Prelude.pure(__dict_Applicative_281)([  ]);
            };
            if (_316.length >= 1) {
                var _1001 = _316.slice(1);
                return Prelude["<*>"](__dict_Applicative_281["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_281["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_316[0]))(sequence(traversableArray)(__dict_Applicative_281)(_1001));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_280) {
        return function (_314) {
            return function (_315) {
                if (_315.length === 0) {
                    return Prelude.pure(__dict_Applicative_280)([  ]);
                };
                if (_315.length >= 1) {
                    var _1005 = _315.slice(1);
                    return Prelude["<*>"](__dict_Applicative_280["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_280["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_314(_315[0])))(traverse(traversableArray)(__dict_Applicative_280)(_314)(_1005));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_282) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_282)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR(function (s) {
                var _1006 = stateR(k)(s);
                return new Data_Tuple.Tuple(_1006.value0, f(_1006.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL(function (s) {
                var _1009 = stateL(k)(s);
                return new Data_Tuple.Tuple(_1009.value0, f(_1009.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_287) {
        return function (__dict_Traversable_288) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_288)(__dict_Applicative_287)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR(function (s) {
                var _1012 = stateR(x)(s);
                var _1013 = stateR(f)(_1012.value0);
                return new Data_Tuple.Tuple(_1013.value0, _1013.value1(_1012.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL(function (s) {
                var _1018 = stateL(f)(s);
                var _1019 = stateL(x)(_1018.value0);
                return new Data_Tuple.Tuple(_1019.value0, _1018.value1(_1019.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_283) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_283)(applicativeStateR)(function (a) {
                        return StateR(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanr = function (__dict_Traversable_284) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumR(__dict_Traversable_284)(function (b) {
                        return function (a) {
                            var b$prime = f(a)(b);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_285) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_285)(applicativeStateL)(function (a) {
                        return StateL(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanl = function (__dict_Traversable_286) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumL(__dict_Traversable_286)(function (b) {
                        return function (a) {
                            var b$prime = f(b)(a);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        mapAccumR: mapAccumR, 
        mapAccumL: mapAccumL, 
        scanr: scanr, 
        scanl: scanl, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var showConst = function (__dict_Show_291) {
        return new Prelude.Show(function (_331) {
            return "Identity (" + (Prelude.show(__dict_Show_291)(_331) + ")");
        });
    };
    var runIdentity = function (_326) {
        return _326;
    };
    var functorIdentity = new Prelude.Functor(function (_332) {
        return function (_333) {
            return _332(_333);
        };
    });
    var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_293) {
        return function (_343) {
            return function (_344) {
                return _343(_344);
            };
        };
    }, function (_340) {
        return function (_341) {
            return function (_342) {
                return _340(_341)(_342);
            };
        };
    }, function (_337) {
        return function (_338) {
            return function (_339) {
                return _337(_339)(_338);
            };
        };
    });
    var traversableIdentity = new Data_Traversable.Traversable(function () {
        return foldableIdentity;
    }, function () {
        return functorIdentity;
    }, function (__dict_Applicative_290) {
        return function (_347) {
            return Prelude["<$>"]((__dict_Applicative_290["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_347);
        };
    }, function (__dict_Applicative_289) {
        return function (_345) {
            return function (_346) {
                return Prelude["<$>"]((__dict_Applicative_289["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_345(_346));
            };
        };
    });
    var extendIdentity = new Control_Extend.Extend(function (f) {
        return function (m) {
            return f(m);
        };
    }, function () {
        return functorIdentity;
    });
    var eqIdentity = function (__dict_Eq_294) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqIdentity(__dict_Eq_294))(x)(y);
            };
        }, function (_327) {
            return function (_328) {
                return Prelude["=="](__dict_Eq_294)(_327)(_328);
            };
        });
    };
    var ordIdentity = function (__dict_Ord_292) {
        return new Prelude.Ord(function () {
            return eqIdentity(__dict_Ord_292["__superclass_Prelude.Eq_0"]());
        }, function (_329) {
            return function (_330) {
                return Prelude.compare(__dict_Ord_292)(_329)(_330);
            };
        });
    };
    var comonadIdentity = new Control_Comonad.Comonad(function () {
        return extendIdentity;
    }, function (_336) {
        return _336;
    });
    var applyIdentity = new Prelude.Apply(function (_334) {
        return function (_335) {
            return _334(_335);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        eqIdentity: eqIdentity, 
        ordIdentity: ordIdentity, 
        showConst: showConst, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity, 
        extendIdentity: extendIdentity, 
        comonadIdentity: comonadIdentity, 
        foldableIdentity: foldableIdentity, 
        traversableIdentity: traversableIdentity
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var withEnv = Control_Comonad_Env_Trans.withEnvT;
    var runEnv = function (x) {
        return Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Control_Comonad_Env_Trans.runEnvT(x));
    };
    var mapEnv = Prelude["<$>"](Control_Comonad_Env_Trans.functorEnvT(Data_Identity.functorIdentity));
    var env = function (e) {
        return function (a) {
            return Control_Comonad_Env_Trans.EnvT(Data_Tuple.Tuple.create(e)(a));
        };
    };
    return {
        env: env, 
        mapEnv: mapEnv, 
        withEnv: withEnv, 
        runEnv: runEnv
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Class = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Env = PS.Control_Comonad_Env;
    var ComonadEnv = function (__superclass_Control$dotComonad$dotComonad_0, ask, local) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.ask = ask;
        this.local = local;
    };
    var local = function (dict) {
        return dict.local;
    };
    var comonadEnvTuple = new ComonadEnv(function () {
        return Data_Tuple.comonadTuple;
    }, Data_Tuple.fst, function (_348) {
        return function (_349) {
            return new Data_Tuple.Tuple(_348(_349.value0), _349.value1);
        };
    });
    var comonadEnvEnvT = function (__dict_Comonad_295) {
        return new ComonadEnv(function () {
            return Control_Comonad_Env_Trans.comonadEnvT(__dict_Comonad_295);
        }, function (x) {
            return Data_Tuple.fst(Control_Comonad_Env_Trans.runEnvT(x));
        }, function (f) {
            return function (x) {
                return Control_Comonad_Env_Trans.EnvT((function () {
                    var _1050 = Control_Comonad_Env_Trans.runEnvT(x);
                    return new Data_Tuple.Tuple(f(_1050.value0), _1050.value1);
                })());
            };
        });
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var asks = function (__dict_ComonadEnv_296) {
        return function (f) {
            return function (x) {
                return f(ask(__dict_ComonadEnv_296)(x));
            };
        };
    };
    return {
        ComonadEnv: ComonadEnv, 
        asks: asks, 
        local: local, 
        ask: ask, 
        comonadEnvTuple: comonadEnvTuple, 
        comonadEnvEnvT: comonadEnvEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Prelude = PS.Prelude;
    var store = function (f) {
        return function (x) {
            return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
        };
    };
    var runStore = function (s) {
        return Data_Tuple.swap(Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Data_Tuple.swap(Control_Comonad_Store_Trans.runStoreT(s))));
    };
    return {
        store: store, 
        runStore: runStore
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced = (function () {
    "use strict";
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var traced = Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Control_Comonad_Traced_Trans.TracedT);
    var runTraced = Prelude[">>>"](Prelude.semigroupoidArr)(Control_Comonad_Traced_Trans.runTracedT)(Data_Identity.runIdentity);
    return {
        traced: traced, 
        runTraced: runTraced
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    
    /**
     *  | Writer operations
     */
    var writer = function (__dict_Applicative_297) {
        return function (_353) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_297)({
                        state: s, 
                        result: _353.value0, 
                        log: _353.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_298) {
        return function (w) {
            return writer(__dict_Applicative_298)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    
    /**
     *  | State operations
     */
    var state = function (__dict_Applicative_299) {
        return function (__dict_Monoid_300) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _1056 = f(s);
                        return Prelude.pure(__dict_Applicative_299)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_300)(_1056.value1)(_1056.value0)(Data_Monoid.mempty(__dict_Monoid_300)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Data_Identity.monadIdentity)(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_301) {
        return function (__dict_Monoid_302) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_301)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_302)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_302)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_303) {
        return function (__dict_Monoid_304) {
            return function (s) {
                return state(__dict_Applicative_303)(__dict_Monoid_304)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_305) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_305["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_351) {
                        return Prelude.pure(__dict_Monad_305["__superclass_Prelude.Applicative_0"]())({
                            state: _351.state, 
                            result: _351.result.value0, 
                            log: _351.result.value1(_351.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_306) {
        return function (__dict_Monoid_307) {
            return function (f) {
                return state(__dict_Applicative_306)(__dict_Monoid_307)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr)(f)(Data_Identity.Identity)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_308) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_308["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_352) {
                            return Prelude.pure(__dict_Monad_308["__superclass_Prelude.Applicative_0"]())({
                                state: _352.state, 
                                result: new Data_Tuple.Tuple(_352.result, f(_352.log)), 
                                log: _352.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_309) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_309["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_350) {
                        return Prelude.pure(__dict_Monad_309["__superclass_Prelude.Applicative_0"]())({
                            state: _350.state, 
                            result: new Data_Tuple.Tuple(_350.result, _350.log), 
                            log: _350.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_310) {
        return function (__dict_Monoid_311) {
            return function (f) {
                return state(__dict_Applicative_310)(__dict_Monoid_311)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_312) {
        return function (__dict_Monoid_313) {
            return state(__dict_Applicative_312)(__dict_Monoid_313)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_314) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_314["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_314["__superclass_Prelude.Applicative_0"]())((function () {
                                var _1073 = {};
                                for (var _1074 in see) {
                                    if (see.hasOwnProperty(_1074)) {
                                        _1073[_1074] = see[_1074];
                                    };
                                };
                                _1073.log = f(see.log);
                                return _1073;
                            })());
                        });
                    };
                };
            };
        };
    };
    
    /**
     *  | Reader operations
     */
    var ask = function (__dict_Applicative_315) {
        return function (__dict_Monoid_316) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_315)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_316)(s)(r)(Data_Monoid.mempty(__dict_Monoid_316)));
                };
            };
        };
    };
    return {
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        reader: reader, 
        local: local, 
        ask: ask, 
        withRWS: withRWS, 
        mapRWS: mapRWS, 
        execRWS: execRWS, 
        evalRWS: evalRWS, 
        runRWS: runRWS, 
        rws: rws
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var MonadReader = function (ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_317) {
        return new MonadReader(Prelude["return"](__dict_Monad_317), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_318) {
        return function (__dict_Monoid_319) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_318["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_319), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_320) {
        return function (__dict_Error_321) {
            return function (__dict_MonadReader_322) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_321))(__dict_Monad_320)(ask(__dict_MonadReader_322)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_322)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_323) {
        return function (__dict_MonadReader_324) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_323)(ask(__dict_MonadReader_324)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_324)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_325) {
        return function (__dict_MonadReader_326) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_325)(ask(__dict_MonadReader_326)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_326)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_327) {
        return function (__dict_Monoid_328) {
            return function (__dict_MonadReader_329) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_328))(__dict_Monad_327)(ask(__dict_MonadReader_329)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_329)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_330) {
        return function (__dict_MonadReader_331) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_330["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_331))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_330))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        reader: reader, 
        local: local, 
        ask: ask, 
        monadReaderFun: monadReaderFun, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderWriterT: monadReaderWriterT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderRWST: monadReaderRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadState = function (state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_332) {
        return function (__dict_MonadState_333) {
            return function (s) {
                return state(__dict_MonadState_333)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_334) {
        return function (__dict_Monoid_335) {
            return function (__dict_MonadState_336) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_335))(__dict_Monad_334)(state(__dict_MonadState_336)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_337) {
        return function (__dict_MonadState_338) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_337)(state(__dict_MonadState_338)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_339) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_339))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_340) {
        return function (__dict_MonadState_341) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_340)(state(__dict_MonadState_341)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_342) {
        return function (__dict_Monoid_343) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_342["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_343));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_344) {
        return function (__dict_MonadState_345) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_344)(state(__dict_MonadState_345)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_346) {
        return function (__dict_Error_347) {
            return function (__dict_MonadState_348) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_347))(__dict_Monad_346)(state(__dict_MonadState_348)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_349) {
        return function (__dict_MonadState_350) {
            return function (f) {
                return state(__dict_MonadState_350)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_351) {
        return function (__dict_MonadState_352) {
            return function (f) {
                return state(__dict_MonadState_352)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_353) {
        return function (__dict_MonadState_354) {
            return state(__dict_MonadState_354)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateReaderT: monadStateReaderT, 
        monadStateWriterT: monadStateWriterT, 
        monadStateRWST: monadStateRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadWriter = function (listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_355) {
        return function (__dict_Monad_356) {
            return function (__dict_MonadWriter_357) {
                return function (w) {
                    return writer(__dict_MonadWriter_357)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_358) {
        return function (__dict_Monad_359) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_359["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_23) {
                    return Prelude["return"](__dict_Monad_359)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_23.value0, _23.value1), _23.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_359["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_24) {
                    return Prelude["return"](__dict_Monad_359)(new Data_Tuple.Tuple(_24.value0.value0, _24.value0.value1(_24.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT)(Prelude["return"](__dict_Monad_359)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_360) {
        return function (__dict_Monoid_361) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_360), Control_Monad_RWS.pass(__dict_Monad_360), Control_Monad_RWS.writer(__dict_Monad_360["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_362) {
        return function (__dict_Monad_363) {
            return function (__dict_MonadWriter_364) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_363["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_364)(m))(function (_21) {
                            return Prelude["return"](__dict_Monad_363)(new Data_Tuple.Tuple(_21.value0, f(_21.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_365) {
        return function (__dict_Error_366) {
            return function (__dict_MonadWriter_367) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_365)(listen(__dict_MonadWriter_367)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_365)(pass(__dict_MonadWriter_367)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_366))(__dict_Monad_365)(writer(__dict_MonadWriter_367)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_368) {
        return function (__dict_MonadWriter_369) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_368)(listen(__dict_MonadWriter_369)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_368)(pass(__dict_MonadWriter_369)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_368)(writer(__dict_MonadWriter_369)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_370) {
        return function (__dict_MonadWriter_371) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_371)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_371)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_370)(writer(__dict_MonadWriter_371)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_372) {
        return function (__dict_MonadWriter_373) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_372)(listen(__dict_MonadWriter_373)), Control_Monad_State_Trans.liftPassState(__dict_Monad_372)(pass(__dict_MonadWriter_373)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_372)(writer(__dict_MonadWriter_373)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_374) {
        return function (__dict_Monad_375) {
            return function (__dict_MonadWriter_376) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_376)(Prelude[">>="](__dict_Monad_375["__superclass_Prelude.Bind_1"]())(m)(function (_22) {
                            return Prelude["return"](__dict_Monad_375)(new Data_Tuple.Tuple(_22, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        monadWriterWriterT: monadWriterWriterT, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterRWST: monadWriterRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Data_Monoid = PS.Data_Monoid;
    var MonadRWS = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_377) {
        return function (__dict_Monoid_378) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_377)(__dict_Monoid_378);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_377)(__dict_Monoid_378);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_377)(__dict_Monoid_378);
            }, function () {
                return __dict_Monoid_378;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_377)(__dict_Monoid_378);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_379) {
        return function (__dict_Monoid_380) {
            return function (__dict_MonadRWS_381) {
                return function (__dict_MonadReader_382) {
                    return function (__dict_MonadWriter_383) {
                        return function (__dict_MonadState_384) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_379)(__dict_MonadReader_382);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_379)(__dict_MonadState_384);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_379)(__dict_MonadWriter_383);
                            }, function () {
                                return __dict_Monoid_380;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_379);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_385) {
        return function (__dict_Monoid_386) {
            return function (__dict_MonadRWS_387) {
                return function (__dict_MonadReader_388) {
                    return function (__dict_MonadWriter_389) {
                        return function (__dict_MonadState_390) {
                            return function (__dict_Error_391) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_385)(__dict_Error_391)(__dict_MonadReader_388);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_385)(__dict_Error_391)(__dict_MonadState_390);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_385)(__dict_Error_391)(__dict_MonadWriter_389);
                                }, function () {
                                    return __dict_Monoid_386;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_385)(__dict_Error_391);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSRWST: monadRWSRWST, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Prelude = PS.Prelude;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        withReader: withReader, 
        runReader: runReader
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        withState: withState, 
        mapState: mapState, 
        execState: execState, 
        evalState: evalState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        mapWriter: mapWriter, 
        execWriter: execWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Network_Routing_Client = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Network_Routing_Client_Foreign = PS.Network_Routing_Client_Foreign;
    var Data_Function = PS.Data_Function;
    var Data_String = PS.Data_String;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    
function newRouter(director){
  return function NewRouterEff(){
    return director();
  }
};
    
function initRouter(d){
  return function InitRouterEff(){
    d.init('/');
  }
};
    
function configureImpl(r, opts){
  return function ConfigureEff(){
    r.configure({'html5history': opts.historyAPI, 'notfound': opts.notFound});
  }
};
    
function globalize(m){
  return m();
};
    
function unsafeCoerce(a){
  return a;
};
    
function paramImpl(d,n,m){
  return function ParamEff(){
    d.param(n,m);
  }
};
    
function routeImpl(d,p,f){
  return function RouteEff(){
    d.on(p,f);
  }
};
    
function wrap0(f){
  return function Wrap0(){return f();}
};
    
function setRouteImpl(d, p){
  return function SetRouteEff(){
    d.setRoute(p);
  }
};
    
function wrap1(f){
  return function Wrap1(a){return f(a)();}
};
    
function wrap2(f){
  return function Wrap2(a,b){return f(a,b)();}
};
    
function wrap3(f){
  return function Wrap3(a,b,c){return f(a,b,c)();}
};
    var Exact = (function () {
        function Exact(value0) {
            this.value0 = value0;
        };
        Exact.create = function (value0) {
            return new Exact(value0);
        };
        return Exact;
    })();
    var Regex = (function () {
        function Regex(value0) {
            this.value0 = value0;
        };
        Regex.create = function (value0) {
            return new Regex(value0);
        };
        return Regex;
    })();
    var Param = (function () {
        function Param(value0) {
            this.value0 = value0;
        };
        Param.create = function (value0) {
            return new Param(value0);
        };
        return Param;
    })();
    var Any = (function () {
        function Any() {

        };
        Any.value = new Any();
        return Any;
    })();
    var Pathes = function (x) {
        return x;
    };
    var RoutingM = function (x) {
        return x;
    };
    var $minus$div = function (_357) {
        return function (_358) {
            return Prelude[":"](unsafeCoerce(_357))(_358);
        };
    };
    var $plus$div = function (_359) {
        return function (_360) {
            return Prelude[":"](unsafeCoerce(_359))(unsafeCoerce(_360));
        };
    };
    var runRouter = function (_354) {
        return function __do() {
            var _30 = newRouter(Network_Routing_Client_Foreign.director)();
            var _29 = _354({
                variableIndex: 0, 
                routerInstance: _30, 
                historyAPI: false, 
                notFound: Data_Maybe.Nothing.value
            })();
            (function () {
                if (_29.s.notFound instanceof Data_Maybe.Nothing) {
                    return configureImpl(_30, {
                        historyAPI: _29.s.historyAPI
                    });
                };
                if (_29.s.notFound instanceof Data_Maybe.Just) {
                    return configureImpl(_30, {
                        historyAPI: _29.s.historyAPI, 
                        notFound: _29.s.notFound.value0(function (s_1) {
                            return setRouteImpl(_30, s_1);
                        })
                    });
                };
                throw new Error("Failed pattern match");
            })()();
            initRouter(_30)();
            return function (s_1) {
                return setRouteImpl(_30, s_1);
            };
        };
    };
    var unsafeGlobalRoute = function (m) {
        return globalize(runRouter(m));
    };
    var regex = Regex.create;
    var pathToString = function (_355) {
        if (_355 instanceof Exact) {
            return _355.value0;
        };
        if (_355 instanceof Regex) {
            return "(" + (_355.value0 + ")");
        };
        if (_355 instanceof Param) {
            return _355.value0;
        };
        if (_355 instanceof Any) {
            return ":_";
        };
        throw new Error("Failed pattern match");
    };
    var pathesToString = function (_356) {
        return "/" + Data_String.joinWith("/")(Prelude["<$>"](Data_Array.functorArray)(pathToString)(_356));
    };
    var showPathes = new Prelude.Show(pathesToString);
    var showPath = new Prelude.Show(pathToString);
    var modifyState = function (f) {
        return RoutingM(function (s) {
            return Prelude["return"](Control_Monad_Eff.monadEff)({
                a: Prelude.unit, 
                s: f(s)
            });
        });
    };
    var notFound = function (m) {
        return modifyState(function (s) {
            var _1101 = {};
            for (var _1102 in s) {
                if (s.hasOwnProperty(_1102)) {
                    _1101[_1102] = s[_1102];
                };
            };
            _1101.notFound = Data_Maybe.Just.create(function (s_1) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(m(s_1));
            });
            return _1101;
        });
    };
    var succIndex = modifyState(function (s) {
        var _1103 = {};
        for (var _1104 in s) {
            if (s.hasOwnProperty(_1104)) {
                _1103[_1104] = s[_1104];
            };
        };
        _1103.variableIndex = s.variableIndex + 1;
        return _1103;
    });
    var useHistoryAPI = modifyState(function (s) {
        var _1105 = {};
        for (var _1106 in s) {
            if (s.hasOwnProperty(_1106)) {
                _1105[_1106] = s[_1106];
            };
        };
        _1105.historyAPI = true;
        return _1105;
    });
    var liftRoutingM = function (m) {
        return RoutingM(function (s) {
            return function __do() {
                var a = m();
                return {
                    a: a, 
                    s: s
                };
            };
        });
    };
    var getState = RoutingM(function (s) {
        return Prelude["return"](Control_Monad_Eff.monadEff)({
            a: s, 
            s: s
        });
    });
    var functorRoutingM = new Prelude.Functor(function (_361) {
        return function (_362) {
            return RoutingM(function (s) {
                return function __do() {
                    var n = _362(s)();
                    return {
                        a: _361(n.a), 
                        s: n.s
                    };
                };
            });
        };
    });
    var exact = Exact.create;
    var empty = [  ];
    var applyRoutingM = new Prelude.Apply(function (_363) {
        return function (_364) {
            return RoutingM(function (s) {
                return function __do() {
                    var _26 = _363(s)();
                    var _25 = _364(_26.s)();
                    return {
                        a: _26.a(_25.a), 
                        s: _25.s
                    };
                };
            });
        };
    }, function () {
        return functorRoutingM;
    });
    var bindRoutingM = new Prelude.Bind(function (_365) {
        return function (_366) {
            return RoutingM(function (s) {
                return function __do() {
                    var _28 = _365(s)();
                    var _27 = _366(_28.a);
                    return _27(_28.s)();
                };
            });
        };
    }, function () {
        return applyRoutingM;
    });
    var route = function (p) {
        return function (f) {
            return Prelude[">>="](bindRoutingM)(getState)(function (_32) {
                return liftRoutingM(routeImpl(_32.routerInstance, pathesToString(p), f));
            });
        };
    };
    var routes0 = function (p) {
        return function (f) {
            return route(p)(Prelude["<$>"](Data_Array.functorArray)(wrap0)(f));
        };
    };
    var route0 = function (p) {
        return function (f) {
            return routes0(p)([ f ]);
        };
    };
    var routes1 = function (p) {
        return function (f) {
            return route(p)(Prelude["<$>"](Data_Array.functorArray)(wrap1)(f));
        };
    };
    var route1 = function (p) {
        return function (f) {
            return routes1(p)([ f ]);
        };
    };
    var routes2 = function (p) {
        return function (f) {
            return route(p)(Prelude["<$>"](Data_Array.functorArray)(function (a) {
                return wrap2(Data_Function.mkFn2(a));
            })(f));
        };
    };
    var route2 = function (p) {
        return function (f) {
            return routes2(p)([ f ]);
        };
    };
    var routes3 = function (p) {
        return function (f) {
            return route(p)(Prelude["<$>"](Data_Array.functorArray)(function (a) {
                return wrap3(Data_Function.mkFn3(a));
            })(f));
        };
    };
    var route3 = function (p) {
        return function (f) {
            return routes3(p)([ f ]);
        };
    };
    var applicativeRoutingM = new Prelude.Applicative(function () {
        return applyRoutingM;
    }, function (a) {
        return RoutingM(function (s) {
            return Prelude["return"](Control_Monad_Eff.monadEff)({
                a: a, 
                s: s
            });
        });
    });
    var monadRoutingM = new Prelude.Monad(function () {
        return applicativeRoutingM;
    }, function () {
        return bindRoutingM;
    });
    var getRouter = Prelude[">>="](bindRoutingM)(getState)(function (s) {
        return Prelude["return"](monadRoutingM)(s.routerInstance);
    });
    var param = function (v) {
        return Prelude[">>="](bindRoutingM)(getState)(function (_31) {
            var n = ":v" + Prelude.show(Prelude.showNumber)(_31.variableIndex);
            return Prelude[">>="](bindRoutingM)(liftRoutingM(paramImpl(_31.routerInstance, n, pathToString(v))))(function () {
                return Prelude[">>="](bindRoutingM)(succIndex)(function () {
                    return Prelude["return"](monadRoutingM)(new Param(n));
                });
            });
        });
    };
    var any = Any.value;
    return {
        route3: route3, 
        route2: route2, 
        route1: route1, 
        route0: route0, 
        routes3: routes3, 
        routes2: routes2, 
        routes1: routes1, 
        routes0: routes0, 
        param: param, 
        "+/": $plus$div, 
        "-/": $minus$div, 
        regex: regex, 
        any: any, 
        exact: exact, 
        empty: empty, 
        notFound: notFound, 
        useHistoryAPI: useHistoryAPI, 
        unsafeGlobalRoute: unsafeGlobalRoute, 
        getRouter: getRouter, 
        runRouter: runRouter, 
        functorRoutingM: functorRoutingM, 
        applyRoutingM: applyRoutingM, 
        applicativeRoutingM: applicativeRoutingM, 
        bindRoutingM: bindRoutingM, 
        monadRoutingM: monadRoutingM, 
        showPath: showPath, 
        showPathes: showPathes
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Network_Routing_Client = PS.Network_Routing_Client;
    var Debug_Trace = PS.Debug_Trace;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
function onDOMConentLoaded(f){
  return function Eff(){
    document.addEventListener("DOMContentLoaded", function(){f()});
  }
};
    
function attachOnClickById(id, fn) {
  return function Eff(){
    document.getElementById(id).addEventListener('click', function(){
      fn();
    });
  }
};
    var main = function __do() {
        var _35 = Network_Routing_Client.runRouter(Prelude[">>="](Network_Routing_Client.bindRoutingM)(Network_Routing_Client.param(Network_Routing_Client.exact("api")))(function (_34) {
            return Prelude[">>="](Network_Routing_Client.bindRoutingM)(Network_Routing_Client.param(Network_Routing_Client.regex("[0-9]+")))(function (_33) {
                return Prelude[">>="](Network_Routing_Client.bindRoutingM)(Network_Routing_Client.route0(Network_Routing_Client.empty)(Debug_Trace.trace("root")))(function () {
                    return Prelude[">>="](Network_Routing_Client.bindRoutingM)(Network_Routing_Client.route0(Network_Routing_Client["-/"](_34)(Network_Routing_Client.empty))(Debug_Trace.trace("api")))(function () {
                        return Prelude[">>="](Network_Routing_Client.bindRoutingM)(Network_Routing_Client.route1(Network_Routing_Client["-/"](_34)(Network_Routing_Client["+/"](_33)(Network_Routing_Client.empty)))(function (n) {
                            return Debug_Trace.trace("api number: " + n);
                        }))(function () {
                            return Prelude[">>="](Network_Routing_Client.bindRoutingM)(Network_Routing_Client.route2(Network_Routing_Client["-/"](_34)(Network_Routing_Client["-/"](Network_Routing_Client.exact("show"))(Network_Routing_Client["+/"](_33)(Network_Routing_Client["+/"](Network_Routing_Client.any)(Network_Routing_Client.empty)))))(function (i) {
                                return function (a) {
                                    return Debug_Trace.trace("api show: " + (i + (", " + a)));
                                };
                            }))(function () {
                                return Network_Routing_Client.notFound(function (set) {
                                    return function __do() {
                                        Debug_Trace.trace("not found")();
                                        return set("/")();
                                    };
                                });
                            });
                        });
                    });
                });
            });
        }))();
        return onDOMConentLoaded(function __do() {
            attachOnClickById("root", _35("/"))();
            attachOnClickById("api", _35("/api"))();
            attachOnClickById("api-12", _35("/api/12"))();
            attachOnClickById("api-bad", _35("/api/bad"))();
            return attachOnClickById("api-show", _35("/api/show/12/cat"))();
        })();
    };
    return {
        main: main, 
        attachOnClickById: attachOnClickById, 
        onDOMConentLoaded: onDOMConentLoaded
    };
})();
PS.Main.main();

